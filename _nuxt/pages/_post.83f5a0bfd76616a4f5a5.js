webpackJsonp([0],{"0/6Y":function(e,t,n){"use strict";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"Post"},[n("div",{staticClass:"Post-header"},[n("h1",{staticClass:"Post-title",domProps:{innerHTML:e._s(e.post.title)}}),n("ul",{staticClass:"Post-prevNext"},[n("li",{staticClass:"Post-prevNextText"},[e.prevPost?n("nuxt-link",{attrs:{to:"/"+e.prevPost.url}},[e._v("PREV")]):n("span",{staticClass:"Post-prevNextInactive"},[e._v("PREV")])],1),n("li",{staticClass:"Post-prevNextText"},[e.nextPost?n("nuxt-link",{attrs:{to:"/"+e.nextPost.url}},[e._v("NEXT")]):n("span",{staticClass:"Post-prevNextInactive"},[e._v("NEXT")])],1)])]),n("h2",{staticClass:"Post-desc",domProps:{innerHTML:e._s(e.post.desc)}}),n("ul",{staticClass:"Post-tags"},e._l(e.tags,function(t){return n("li",{staticClass:"Post-tag"},[e.getAbbrTag(t)?n("span",{class:"Tag Tag--"+e.getAbbrTag(t)},[e._v(e._s(e.getAbbrTag(t)))]):e._e(),e._v("\n      "+e._s(e.getTag(t))+"\n    ")])})),n("p",[n("strong",{staticClass:"Warning"},[e._v("Support: ")]),n("span",{domProps:{innerHTML:e._s(e.post.support)}})]),n("div",{staticClass:"Post-content",domProps:{innerHTML:e._s(e.postContent)}}),e.isPaint?n("p",[n("a",{attrs:{href:e.registerPaintURL}},[e._v("See registerPaint module")])]):e._e(),e.isLayout?n("p",[n("a",{attrs:{href:e.registerLayoutURL}},[e._v("See registerLayout module")])]):e._e()])},o=[],r={render:i,staticRenderFns:o};t.a=r},"1zfe":function(e,t){e.exports='<p>Some really cool trickery here.</p> <p><strong>Each item on the grid is clipped by a mask generated by the paint worklet.</strong> I am using <code>mask-border-source</code> and <code>mask-border-outset</code> instead of <code>mask-image</code> to make it work with content that is outside of the item. This allows to create non straight lines and overlapping items.</p> <p>The problem is that each item have its own paint worklet, and there is no way to store a global state. So, <strong>I’m using seeded numbers to make sure the whole grid is identically and randomly generated every time</strong> in the paint worklet. Then, we only <strong>draw the specific mask for one item from the grid</strong> (each item have an <code>--id</code> property). To generate a random grid every time, we also set a <code>--seed</code> variable and send it to the worklet.</p> <p>The grid is fully responsive, and you can play with some CSS properties.</p> <p>As all other demos, if Paint API is not supported or if JS is disabled, you get a classic grid. <strong>It’s just progressive enhancement.</strong></p> <style> .Demo {\n  background: radial-gradient(at center, #333, #555);\n}\n.grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));\n  gap: 3px;\n  --irregular-grid-x: 10;\n  --irregular-grid-y: 10;\n  justify-content: center;\n  margin: 50px;\n  -webkit-filter: drop-shadow(0 0 10px rgba(0,0,0,.5));\n  filter: drop-shadow(0 0 10px rgba(0,0,0,.5));\n}\n@media (max-width: 570px) {\n  .grid {\n    margin: 50px 20px;\n  }\n}\n@media (max-width: 390px) {\n  .grid {\n    max-width: 256px;\n    margin: auto;\n  }\n}\n.item {\n  height: 200px;\n  overflow: hidden;\n}\n@supports (-webkit-mask-box-image-source: paint(irregular-grid)) or (mask-border-source: paint(irregular-grid)) {\n  .is-loaded .item {\n    overflow: visible;\n    --border-width: 20;\n    -webkit-mask-box-image-source: paint(irregular-grid);\n            mask-border-source: paint(irregular-grid);\n    -webkit-mask-box-image-outset: calc(1px * var(--border-width));\n            mask-border-outset: calc(1px * var(--border-width));\n  }\n}\n\n.item-inner {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: white;\n}\n.item-content {\n  width: 256px;\n  height: 256px;\n  flex: 0 0 auto;\n  background: white;\n  padding: calc(1px * var(--border-width));\n  color: #333;\n}\n.item-content:not(img) {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: #ffed00;\n}\n.title {\n  font-size: 2em;\n  font-weight: bold;\n}\n.title small {\n  font-size: .5em;\n} </style> <div class=Demo> <div class=grid id=grid> <div class=item> <div class=item-inner> <img class=item-content src=https://a.tile.opentopomap.org/15/16592/11272.png alt=""> </div> </div> <div class=item> <div class=item-inner> <p class="item-content title">MAPS <small>France</small></p> </div> </div> <div class=item> <div class=item-inner> <img class=item-content src=https://b.tile.opentopomap.org/12/2125/1458.png alt=""> </div> </div> <div class=item> <div class=item-inner> <img class=item-content src=https://stamen-tiles-b.a.ssl.fastly.net/watercolor/10/529/364.jpg alt=""> </div> </div> <div class=item> <div class=item-inner> <img class=item-content src=https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/7/46/65 alt=""> </div> </div> <div class=item> <div class=item-inner> <img class=item-content src=https://stamen-tiles-d.a.ssl.fastly.net/toner-lite/10/528/367.png alt=""> </div> </div> <div class=item> <div class=item-inner> <img class=item-content src=https://map1.vis.earthdata.nasa.gov/wmts-webmerc/VIIRS_CityLights_2012/default//GoogleMapsCompatible_Level8/5/10/16.jpg alt=""> </div> </div> <div class=item> <div class=item-inner> <img class=item-content src="https://wxs.ign.fr/choisirgeoportail/geoportail/wmts?REQUEST=GetTile&SERVICE=WMTS&VERSION=1.0.0&STYLE=normal&TILEMATRIXSET=PM&FORMAT=image/jpeg&LAYER=GEOGRAPHICALGRIDSYSTEMS.MAPS&TILEMATRIX=15&TILEROW=11687&TILECOL=16653" alt=""> </div> </div> <div class=item> <div class=item-inner> <img class=item-content src=https://maps.wikimedia.org/osm-intl/7/62/44.png alt=""> </div> </div> <div class=item> <div class=item-inner> <img class=item-content src="https://a.tiles.mapbox.com/v4/mapbox.b0v97egc/14/8311/5636.png?access_token=pk.eyJ1IjoiaWFtdmRvIiwiYSI6IkI1NGhfYXMifQ.2FD2Px_Fh2gAZCFTxdrL7g" alt=""> </div> </div> <div class=item> <div class=item-inner> <img class=item-content src=https://c.tiles.mapbox.com/v3/aj.map-3brc6sla/14/8522/5976.png alt=""> </div> </div> <div class=item> <div class=item-inner> <img class=item-content src="https://a.tiles.mapbox.com/v4/katiekowalsky.236692c1/15/16596/11274.png?access_token=pk.eyJ1IjoiaWFtdmRvIiwiYSI6IkI1NGhfYXMifQ.2FD2Px_Fh2gAZCFTxdrL7g" alt=""> </div> </div> <div class=item> <div class=item-inner> <img class=item-content src="https://c.tiles.mapbox.com/v4/duncangraham.552f58b0/6/33/23.png?access_token=pk.eyJ1IjoiaWFtdmRvIiwiYSI6IkI1NGhfYXMifQ.2FD2Px_Fh2gAZCFTxdrL7g" alt=""> </div> </div> <div class=item> <div class=item-inner> <img class=item-content src="https://api.mapbox.com/styles/v1/mslee/cij1zoclj002y8rkkdjl69psd/tiles/12/2124/1465?access_token=pk.eyJ1IjoibXNsZWUiLCJhIjoiclpiTWV5SSJ9.P_h8r37vD8jpIH1A6i1VRg" alt=""> </div> </div> </div> <div class=Control> <label for=gap><code>gap</code></label> <input id=gap type=range min=0 max=20 value=3> </div> <div class=Control> <label for=irregular-grid-x><code>--irregular-grid-x</code></label> <input id=irregular-grid-x type=range min=0 max=20 value=10> </div> <div class=Control> <label for=irregular-grid-y><code>--irregular-grid-y</code></label> <input id=irregular-grid-y type=range min=0 max=20 value=10> </div> </div> <pre class=Code><code>.grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));\n  gap: <mark id=valuegap>3px</mark>;\n  --irregular-grid-x: <mark id=valueirregular-grid-x>10</mark>;\n  --irregular-grid-y: <mark id=valueirregular-grid-y>10</mark>;\n}\n.item {\n  height: 200px;\n  overflow: hidden;\n}\n@supports (mask-border-source: paint(irregular-grid)) {\n  .is-loaded .item {\n    overflow: visible;\n    --border-width: 20;\n    mask-border-source: paint(irregular-grid);\n    mask-border-outset: calc(1px * var(--border-width));\n  }\n}\n/*\nCSS code needs prefixes: use Autoprefixer\nmask-border-source    -webkit-mask-box-image-source\nmask-border-outset    -webkit-mask-box-image-outset\n*/</code></pre>'},"28ni":function(e,t){e.exports="<p>The tooltip is drawn in the bottom border, outside of the box, thanks to <code>border-image-outset</code></p> <style> .Demo {\n  background: radial-gradient(white, hsl(195, 85%, 65%));\n  color: #111;\n}\n.hello {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 3em;\n  color: #fff;\n  height: 150px;\n  width: 200px;\n  margin: 50px auto;\n  border-radius: 10px;\n  background: hsl(193, 100%, 30%);\n  border-bottom: 1px solid transparent;\n  border-top: 1px solid transparent;\n  border-image-source: paint(tooltip);\n  border-image-slice: 0 0 100% 0;\n  border-image-width: var(--border-width);\n  border-image-outset: var(--border-width);\n  --tooltip-position: 50%;\n  --tooltip-size: 30px;\n  --border-width: 20px;\n} </style> <div class=Demo> <div class=hello id=el>HELLO</div> <div class=Control> <label for=tooltip-position><code>--tooltip-position</code></label> <input id=tooltip-position type=range min=20 max=80 step=1 value=50> </div> <div class=Control> <label for=tooltip-size><code>--tooltip-size</code></label> <input id=tooltip-size type=range min=0 max=100 step=1 value=30> </div> <div class=Control> <label for=border-width><code>--border-width</code></label> <input id=border-width type=range min=0 max=100 step=1 value=20> </div> </div> <pre class=Code><code>.el {\n  background: #00c6ff;\n  border-image-source: paint(tooltip);\n  border-image-slice: 0 0 100% 0;\n  border-image-width: var(--border-width);\n  border-image-outset: var(--border-width);\n  --border-width: <mark id=valueborder-width>20px</mark>;\n  --tooltip-position: <mark id=valuetooltip-position>50%</mark>;\n  --tooltip-size: <mark id=valuetooltip-size>30px</mark>;\n}</code></pre> "},"6FXL":function(e,t){e.exports=function(){function e(){for(var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],i="M"+C[0].x+","+C[0].y,o=0;o<=C.length;o+=3)t(o,C[o],e),C[o+1]&&(i+="C"+C[o+1].x+","+C[o+1].y+","+C[o+2].x+","+C[o+2].y+","+C[o+3].x+","+C[o+3].y,x.style.setProperty("d",'path("'+i+'")'),document.getElementById("el").style.setProperty("--path",'path("'+i+'")'),n(o,C[o],C[o+1],C[o+2],C[o+3],e))}function t(e,t,n){var i=void 0;i=n?document.createElementNS("http://www.w3.org/2000/svg","circle"):document.querySelector('[data-i="'+e+'"]'),i.setAttribute("cx",t.x),i.setAttribute("cy",t.y),i.setAttribute("r",25),i.setAttribute("data-i",e),y.appendChild(i)}function n(e,t,n,i,o,r){var a=void 0,s=void 0,l=void 0,d=void 0;r?(a=document.createElementNS("http://www.w3.org/2000/svg","circle"),s=document.createElementNS("http://www.w3.org/2000/svg","circle"),l=document.createElementNS("http://www.w3.org/2000/svg","polyline"),d=document.createElementNS("http://www.w3.org/2000/svg","polyline")):(a=document.querySelector('[data-i="'+(e+1)+'"]'),s=document.querySelector('[data-i="'+(e+2)+'"]'),l=document.querySelector('[data-li="'+e+'"]'),d=document.querySelector('[data-li="'+(e+1)+'"]')),a.setAttribute("cx",n.x),a.setAttribute("cy",n.y),a.setAttribute("r",15),a.setAttribute("data-i",e+1),s.setAttribute("cx",i.x),s.setAttribute("cy",i.y),s.setAttribute("r",15),s.setAttribute("data-i",e+2),l.setAttribute("points",t.x+","+t.y+" "+n.x+","+n.y),l.setAttribute("data-li",e),d.setAttribute("points",i.x+","+i.y+" "+o.x+","+o.y),d.setAttribute("data-li",e+1),k.appendChild(a),k.appendChild(s),w.appendChild(l),w.appendChild(d)}function i(){y.innerHTML="",k.innerHTML="",w.innerHTML="",C=b(getComputedStyle(x).getPropertyValue("d").replace('path("',"").replace('")',"")),e(!0)}var o=document.getElementById("el");o.classList.add("is-loaded"),["justify-items","align-items","justify-self","align-self","path"].forEach(function(e){document.getElementById(e).addEventListener("input",function(t){var n=t.target.value,o=document.querySelector(".el");"justify-self"!==e&&"align-self"!==e||(o=document.querySelector(".el :nth-child(3)")),"path"===e&&(n.endsWith("z")?o.style.setProperty("--path-loop","loop"):o.style.setProperty("--path-loop","no-loop"),n='path("'+n+'")',document.querySelector("#svg-"+e).style.setProperty("d",n),i()),o.style.setProperty("--"+e,n),document.getElementById("value"+e).innerHTML=n})}),buttonAdd.addEventListener("click",function(e){for(var t=".",n=Math.max(3,Math.floor(10*Math.random())),i=0;i<n;i++)t+=".";var r=document.createElement("div");r.innerHTML="<div><strong>"+(o.children.length+1)+".</strong>"+t+"</div>",o.appendChild(r)}),buttonRemove.addEventListener("click",function(e){o.children.length>5&&o.removeChild(o.children[o.children.length-1])});var r=Math.PI/180,a=180/Math.PI,d=/[\+\-]?\d*\.?\d+e[\+\-]?\d+/gi,c=/[achlmqstvz]|(-?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,p=/(^[#\.]|[a-y][a-z])/gi,u=/(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,g=function(e,t){var n,i,o,a,s,l,d=Math.ceil(Math.abs(t)/90),c=0,p=[];for(e*=r,t*=r,n=t/d,i=4/3*Math.sin(n/2)/(1+Math.cos(n/2)),l=0;d>l;l++)o=e+l*n,a=Math.cos(o),s=Math.sin(o),p[c++]=a-i*s,p[c++]=s+i*a,o+=n,a=Math.cos(o),s=Math.sin(o),p[c++]=a+i*s,p[c++]=s-i*a,p[c++]=a,p[c++]=s;return p},m=function(e,t,n,i,o,s,l,d,c){if(e!==d||t!==c){n=Math.abs(n),i=Math.abs(i);var p=o%360*r,u=Math.cos(p),m=Math.sin(p),h=(e-d)/2,v=(t-c)/2,b=u*h+m*v,f=-m*h+u*v,x=n*n,y=i*i,k=b*b,w=f*f,C=k/x+w/y;C>1&&(n=Math.sqrt(C)*n,i=Math.sqrt(C)*i,x=n*n,y=i*i);var S=s===l?-1:1,E=(x*y-x*w-y*k)/(x*w+y*k);0>E&&(E=0);var L=S*Math.sqrt(E),P=L*(n*f/i),z=L*(-i*b/n),I=(e+d)/2,M=(t+c)/2,j=I+(u*P-m*z),T=M+(m*P+u*z),A=(b-P)/n,D=(f-z)/i,B=(-b-P)/n,R=(-f-z)/i,V=Math.sqrt(A*A+D*D),F=A;S=0>D?-1:1;var G=S*Math.acos(F/V)*a;V=Math.sqrt((A*A+D*D)*(B*B+R*R)),F=A*B+D*R,S=0>A*R-D*B?-1:1;var N=S*Math.acos(F/V)*a;!l&&N>0?N-=360:l&&0>N&&(N+=360),N%=360,G%=360;var H,q,O,_=g(G,N),Y=u*n,W=m*n,$=m*-i,X=u*i,J=_.length-2;for(H=0;J>H;H+=2)q=_[H],O=_[H+1],_[H]=q*Y+O*$+j,_[H+1]=q*W+O*X+T;return _[_.length-2]=d,_[_.length-1]=c,_}},h=function(e){var t,n,i,o,r,a,s,p,u,g,h,v,b,f=(e+"").replace(d,function(e){var t=+e;return 1e-4>t&&t>-1e-4?0:t}).match(c)||[],x=[],y=0,k=0,w=f.length,C=2,S=0;if(!e||!isNaN(f[0])||isNaN(f[1]))return l("ERROR: malformed path data: "+e),x;for(t=0;w>t;t++)if(b=r,isNaN(f[t])?(r=f[t].toUpperCase(),a=r!==f[t]):t--,i=+f[t+1],o=+f[t+2],a&&(i+=y,o+=k),0===t&&(p=i,u=o),"M"===r)s&&s.length<8&&(x.length-=1,C=0),y=p=i,k=u=o,s=[i,o],S+=C,C=2,x.push(s),t+=2,r="L";else if("C"===r)s||(s=[0,0]),s[C++]=i,s[C++]=o,a||(y=k=0),s[C++]=y+1*f[t+3],s[C++]=k+1*f[t+4],s[C++]=y+=1*f[t+5],s[C++]=k+=1*f[t+6],t+=6;else if("S"===r)"C"===b||"S"===b?(g=y-s[C-4],h=k-s[C-3],s[C++]=y+g,s[C++]=k+h):(s[C++]=y,s[C++]=k),s[C++]=i,s[C++]=o,a||(y=k=0),s[C++]=y+=1*f[t+3],s[C++]=k+=1*f[t+4],t+=4;else if("Q"===r)g=i-y,h=o-k,s[C++]=y+2*g/3,s[C++]=k+2*h/3,a||(y=k=0),y+=1*f[t+3],k+=1*f[t+4],g=i-y,h=o-k,s[C++]=y+2*g/3,s[C++]=k+2*h/3,s[C++]=y,s[C++]=k,t+=4;else if("T"===r)g=y-s[C-4],h=k-s[C-3],s[C++]=y+g,s[C++]=k+h,g=y+1.5*g-i,h=k+1.5*h-o,s[C++]=i+2*g/3,s[C++]=o+2*h/3,s[C++]=y=i,s[C++]=k=o,t+=2;else if("H"===r)o=k,s[C++]=y+(i-y)/3,s[C++]=k+(o-k)/3,s[C++]=y+2*(i-y)/3,s[C++]=k+2*(o-k)/3,s[C++]=y=i,s[C++]=o,t+=1;else if("V"===r)o=i,i=y,a&&(o+=k-y),s[C++]=i,s[C++]=k+(o-k)/3,s[C++]=i,s[C++]=k+2*(o-k)/3,s[C++]=i,s[C++]=k=o,t+=1;else if("L"===r||"Z"===r)"Z"===r&&(i=p,o=u,s.closed=!0),("L"===r||Math.abs(y-i)>.5||Math.abs(k-o)>.5)&&(s[C++]=y+(i-y)/3,s[C++]=k+(o-k)/3,s[C++]=y+2*(i-y)/3,s[C++]=k+2*(o-k)/3,s[C++]=i,s[C++]=o,"L"===r&&(t+=2)),y=i,k=o;else if("A"===r){if(v=m(y,k,1*f[t+1],1*f[t+2],1*f[t+3],1*f[t+4],1*f[t+5],(a?y:0)+1*f[t+6],(a?k:0)+1*f[t+7]))for(n=0;n<v.length;n++)s[C++]=v[n];y=s[C-2],k=s[C-1],t+=7}else l("Error: malformed path data: "+e);return x.totalPoints=S+C,x},v=function(e,t,n){var i,o,r="string"==typeof e;return(!r||p.test(e)||(e.match(u)||[]).length<3)&&(i=r?s.selector(e):e&&e[0]?e:[e],i&&i[0]?(i=i[0],o=i.nodeName.toUpperCase(),t&&"PATH"!==o&&(i=B(i,!1),o="PATH"),e=i.getAttribute("PATH"===o?"d":"points")||"",i===n&&(e=i.getAttributeNS(null,"data-original")||e)):(l("WARNING: invalid morph to: "+e),e=!1)),e},b=function(e,t){var n,i,o,r,a,l,d,c,p=h(v(e,!0))[0]||[],u=0;if(t=t||{},c=t.align||t.relative,r=t.matrix||[1,0,0,1,0,0],a=t.offsetX||0,l=t.offsetY||0,"relative"===c||!0===c?(a-=p[0]*r[0]+p[1]*r[2],l-=p[0]*r[1]+p[1]*r[3],u="+="):(a+=r[4],l+=r[5],c&&(c="string"==typeof c?s.selector(c):c&&c[0]?c:[c])&&c[0]&&(d=c[0].getBBox()||{x:0,y:0},a-=d.x,l-=d.y)),n=[],o=p.length,r&&"1,0,0,1,0,0"!==r.join(","))for(i=0;o>i;i+=2)n.push({x:u+(p[i]*r[0]+p[i+1]*r[2]+a),y:u+(p[i]*r[1]+p[i+1]*r[3]+l)});else for(i=0;o>i;i+=2)n.push({x:u+(p[i]+a),y:u+(p[i+1]+l)});return n},f=document.getElementById("svg"),x=document.getElementById("svg-path"),y=document.getElementById("points"),k=document.getElementById("controlPoints"),w=document.getElementById("controlPolylines"),C=[];i();var S=null;f.addEventListener("pointerdown",function(e){var t=f.getBoundingClientRect(),n=t.width/1e3,i=e.target;i.getAttribute("data-i")?(i.scale=n,i.start={x:C[i.getAttribute("data-i")].x,y:C[i.getAttribute("data-i")].y},i.mouse=i.mouse||{},i.mouse.start={x:e.clientX/i.scale,y:e.clientY/i.scale},i.mouse.delta=i.mouse.delta||{x:0,y:0},S=i):S=null}),f.addEventListener("pointermove",function(t){null!=S&&(S.mouse.delta={x:t.clientX/S.scale-S.mouse.start.x,y:t.clientY/S.scale-S.mouse.start.y},C[S.getAttribute("data-i")].x=S.start.x+S.mouse.delta.x,C[S.getAttribute("data-i")].y=S.start.y+S.mouse.delta.y,e(!1))}),f.addEventListener("pointerup",function(e){null!=S&&(S=null)})}},"8zkG":function(e,t){e.exports="<p>This function is not in CSS spec, but works as the same principle as the <a href=/conic-gradient>conic-gradient demo</a>.</p> <style> .el {\n  position: relative;\n  width: 256px;\n  height: 256px;\n  margin: 50px auto;\n  border-radius: 10px;\n}\n.el::before {\n  -webkit-mask: linear-gradient(#0000, #000);\n} </style> <div class=Demo id=Demo> <div id=el class=el></div> </div> <pre class=Code><code class=\"liveCoding css\" data-livecoding-id=Demo contenteditable>.el {\n  background: linear-gradient(to right, deeppink, cyan);\n}\n.el::before {\n  content: '';\n  position: absolute;\n  top: 0; left: 0; right: 0; bottom: 0;\n  border-radius: inherit;\n  background: linear-gradient(to right, yellow, orangered);\n  mask: linear-gradient(#0000, #000);\n}\n@supports (background: paint(id, foo)) {\n  .el.is-loaded {\n    background: <mark>paint(corners-gradient, deeppink, cyan, orangered, yellow)</mark>;\n  }\n  .el.is-loaded::before {\n    opacity: 0;\n  }\n}\n</code></pre>"},BWHf:function(e,t){e.exports=function(){document.getElementById("el").classList.add("is-loaded")}},CvAr:function(e,t){e.exports=function(){document.getElementById("el").classList.add("is-loaded"),["separator-size","separator-shadow","separator-shadow-color","separator-shape"].forEach(function(e){document.getElementById(e).addEventListener("input",function(t){var n=t.target.value;"separator-size"===e&&(n+="px"),"separator-shadow-color"===e&&(n="rgba(0,0,0,"+n+")"),document.getElementById("el").style.setProperty("--"+e,n),document.getElementById("value"+e).innerHTML=n})})}},E3jA:function(e,t){e.exports=function(){document.getElementById("masonry").classList.add("is-loaded"),["columns","padding"].forEach(function(e){document.getElementById("masonry"+e).addEventListener("input",function(t){var n=t.target.value;document.getElementById("masonry").style.setProperty("--"+e,n),document.getElementById("value"+e).innerHTML=n})})}},EKVQ:function(e,t){e.exports=function(){document.getElementById("el").classList.add("loaded"),["tooltip-position","tooltip-size","border-width"].forEach(function(e){document.getElementById(e).addEventListener("input",function(t){var n=t.target.value;"tooltip-position"===e&&(n+="%"),"tooltip-size"!==e&&"border-width"!==e||(n+="px"),document.getElementById("el").style.setProperty("--"+e,n),document.getElementById("value"+e).innerHTML=n})})}},HQd9:function(e,t,n){function i(e){return n(o(e))}function o(e){var t=r[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var r={"./animating-gradient/index.html":"ol7+","./avatar-polygons/index.html":"m+Sq","./background-properties/index.html":"zx/N","./checkboxes/index.html":"KWhV","./conic-gradient/index.html":"nTdF","./corner-shape/index.html":"NvPW","./corners-gradient/index.html":"8zkG","./double-rainbow/index.html":"rr8+","./dynamic-hover-masks/index.html":"qunT","./eq-responsive-background/index.html":"hGys","./highlighter-marker-annotations/index.html":"r46r","./inner-borders/index.html":"Iud7","./irregular-grid/index.html":"1zfe","./js-in-css/index.html":"vA52","./masonry/index.html":"MJNI","./non-rectangular-separators/index.html":"hPFl","./random-bubbles-mask/index.html":"LVGb","./ripple/index.html":"ekN9","./rough-boxes/index.html":"MtuS","./slanted-backgrounds/index.html":"Xx5n","./smooth-corners/index.html":"wwpY","./svg-in-css/index.html":"kZAv","./svg-path-layout/index.html":"O5Om","./tooltip/index.html":"28ni"};i.keys=function(){return Object.keys(r)},i.resolve=o,e.exports=i,i.id="HQd9"},Iud7:function(e,t){e.exports='<p>A quick and simple paint worklet to draw borders inside the element. Use it with arguments instead of custom properties to apply many inner borders to one element</p> <p><code>paint(inner-border, &lt;width>, &lt;color>, &lt;offset>, &lt;angle>)</code></p> <style> .Demo {\n  background: linear-gradient(to bottom right, deeppink, orange);\n}\n.Demo-wrapper {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 276px);\n  justify-items: center;\n  grid-gap: 30px;\n  justify-content: center;\n  padding-bottom: 25px;\n}\n@media (max-width: 570px) {\n  .Demo-wrapper {\n    grid-template-columns: 1fr;\n  }\n}\n.el {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font: 1em sans-serif;\n  color: white;\n  width: 256px;\n  height: 256px;\n  text-shadow: 0 2px 2px rgba(0,0,0,.5);\n  filter: drop-shadow(0 2px 5px rgba(0,0,0,.5))\n}\n.el--1 {\n  background: url(https://picsum.photos/256/256?image=62);\n}\n.el--2 {\n  background: url(https://picsum.photos/256/256?image=154);\n}\n.el--3 {\n  background: url(https://picsum.photos/300/300?image=201);\n}\n.el--4 {\n  background: url(https://picsum.photos/256/256?image=14);\n  -webkit-mask-image: paint(inner-border, 5px, white, 10px, 0deg), linear-gradient(black, black);\n  -webkit-mask-composite: xor;\n  mask-image: paint(inner-border, 5px, white, 10px, 0deg), linear-gradient(black, black);\n  mask-composite: exclude;\n}\n.el--5 {\n  box-sizing: border-box;\n  background: #2785b8;\n  padding: 30px;\n}\n.el--6 {\n  background:  url(https://picsum.photos/256/256?image=41);\n} </style> <div class=Demo id=Demo> <div class=Demo-wrapper> <div class="el el--1"></div> <div class="el el--2"></div> <div class="el el--3"></div> <div class="el el--4"></div> <div class="el el--5"> Forget the fat lady! You\'re obsessed with the fat lady! Drive us out of here! Did he just throw my cat out of the window? Forget the fat lady! You\'re obsessed with the fat lady! Drive us out of here! Life finds a way. What do they got in there? King Kong? </div> <div class="el el--6"></div> </div> </div> <pre class=Code><code class="liveCoding css" data-livecoding-id=Demo contenteditable>.el--1 {\n  background: paint(inner-border, 2px, white, 10px, 0deg),\n             url(https://picsum.photos/256/256?image=62);\n}\n.el--2 {\n  background: paint(inner-border, 2px, white, 10px, 0deg),\n             paint(inner-border, 1px, white, 14px, 0deg),\n             url(https://picsum.photos/256/256?image=154);\n}\n.el--3 {\n  background: paint(inner-border, 2px, black, 10px, -2deg),\n             paint(inner-border, 2px, black, 10px, 0deg),\n             paint(inner-border, 2px, black, 10px, 3deg),\n             url(https://picsum.photos/300/300?image=201);\n}\n.el--4 {\n  background: url(https://picsum.photos/256/256?image=14);\n  -webkit-mask-image: paint(inner-border, 5px, white, 10px, 0deg), linear-gradient(black, black);\n  -webkit-mask-composite: xor;\n  mask-image: paint(inner-border, 5px, white, 10px, 0deg), linear-gradient(black, black);\n  mask-composite: exclude;\n}\n.el--5 {\n  background: paint(inner-border, 2px, white, 10px, 0deg) #2785b8;\n}\n.el--6 {\n  background: paint(inner-border, 10px, white, 0, -10deg),\n             url(https://picsum.photos/256/256?image=41);\n}</code></pre>'},KMsR:function(e,t){e.exports=function(){document.getElementById("el").classList.add("is-loaded")}},KWhV:function(e,t){e.exports='<p>Code mostly from <a href=https://github.com/MatteoWebDesigner/css-paint-worklet>https://github.com/MatteoWebDesigner/css-paint-worklet</a></p> <style> .Demo {\n\ttext-align: center;\n\tpadding: 50px;\n}\ninput {\n\toutline: 0;\n\tvertical-align: middle;\n}\nlabel {\n\tmargin-bottom: 5px;\n\tvertical-align: middle;\n}\nlabel:last-child {\n\tmargin-bottom: 0;\n}\n.Checkbox {\n\tmargin: 0 1rem 0 2rem;\n\twidth: 24px;\n\theight: 24px;\n\tborder-radius: 2px;\n\tbackground-color: #555;\n\t--checkbox-tick-color: transparent;\n\ttransition: --checkbox-tick-color 500ms, background-color 500ms;\n}\n@supports (background-image: paint(checkbox)) {\n\t.is-loaded .Checkbox {\n\t\t-webkit-appearance: none;\n\t\tbackground-image: paint(checkbox);\n\t}\n}\n.Checkbox:hover {\n\t--checkbox-tick-color: rgba(255,255,255,.25);\n}\n.Checkbox:checked {\n\t--checkbox-tick-color: white;\n\tbackground-color: deeppink;\n}\n@media (max-width: 600px) {\n\tlabel {\n\t\tdisplay: block;\n\t\ttext-align: left\n\t}\n\t.Checkbox {\n\t\tmargin-left: 0;\n\t}\n} </style> <div class=Demo id=Demo> <label> <input type=checkbox class=Checkbox>Such wow </label> <label> <input type=checkbox class=Checkbox>Very awesome </label> <label> <input type=checkbox class=Checkbox>Much huge </label> </div> <pre class=Code><code class="liveCoding css" contenteditable data-livecoding-id=Demo>.Checkbox {\n  background-color: #555;\n  transition: --checkbox-tick-color 500ms, background-color 500ms;\n}\n@supports (background: paint(id)) {\n  .is-loaded .Checkbox {\n    -webkit-appearance: none;\n    background-image: paint(checkbox);\n  }\n}\n.Checkbox:hover {\n  --checkbox-tick-color: rgba(255,255,255,.25);\n}\n.Checkbox:checked {\n  --checkbox-tick-color: white;\n  background-color: deeppink;\n}</code></pre>'},L2ZZ:function(e,t){e.exports=function(){function e(){t.style.setProperty("--seed",Math.random()),t.style.setProperty("--width",t.offsetWidth),t.style.setProperty("--items",t.children.length),t.style.setProperty("--items-width",t.children[0].offsetWidth);for(var e=0;e<t.children.length;e++)t.children[e].style.setProperty("--id",e)}var t=document.getElementById("grid");t.classList.add("is-loaded"),e(),window.addEventListener("resize",e),new window.ResizeObserver(function(t){e()}).observe(t),["irregular-grid-x","irregular-grid-y","gap"].forEach(function(e){document.getElementById(e).addEventListener("input",function(n){var i=n.target.value;"gap"===e?(t.style.gap=i+"px",document.getElementById("value"+e).innerHTML=i+"px"):(t.style.setProperty("--"+e,i),t.style.setProperty("--seed",Math.random()),document.getElementById("value"+e).innerHTML=i)})})}},LVGb:function(e,t,n){e.exports="<p>This demo makes use of seeded random numbers to get random bubbles not so random :)</p> <p>Interesting part here is that each image as its own random bubbles, but its randomness is “saved” during animation, thanks to seeded random numbers inside paint worklet.</p> <p>Uncheck option to see the difference. Without seeded ramdom numbers, each repaint generates random bubbles</p> <style> .Demo {\n  //padding: 50px 0;\n  background: hsl(190, 10%, 22%);\n  --bubbles-size: 80;\n}\n.Demo-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding-bottom: 25px;\n}\n.el {\n  width: 200px;\n  height: 200px;\n  margin: 15px;\n  border: 5px solid hsl(190, 56%, 42%);\n  box-shadow: 0 8px 15px rgba(0,0,0,.1);\n  --seed: 1;\n  --seed-check: 1;\n  --bubbles: 75;\n  --bubbles-size: 0;\n  transition: --bubbles-size .4s ease-out;\n}\n.text {\n  position: absolute;\n  width: 200px;height: 200px;\n  background: hsl(190, 56%, 42%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font: 2em sans-serif;\n  color: #fff;\n  -webkit-mask-image: paint(bubbles);\n}\n.el.hover {\n  --bubbles-size: inherit; /* inherits from .Demo (useful because of JS or CSS hover state) */\n  transition-timing-function: cubic-bezier(.7,.3,.9,.7);\n}\n.el:nth-child(2) {\n  --seed: 2;\n}\n.el:nth-child(3) {\n  --seed: 3;\n} </style> <div class=Demo id=Demo> <div class=Demo-wrapper> <div class=el> <div class=text>Such Wow.</div> <img src="+n("ev5t")+' alt=""> </div> <div class=el> <div class=text>Very Awesome.</div> <img src='+n("vdef")+' alt=""> </div> <div class=el> <div class=text>So CSS!</div> <img src='+n("ad1h")+" alt=\"\"> </div> </div> <div class=Control> <label for=seed>Seeded random numbers</label> <input type=checkbox id=seed checked=checked> </div> <div class=Control> <label for=bubbles><code>--bubbles</code></label> <input id=bubbles type=range min=1 max=250 value=75> </div> <div class=Control> <label for=bubbles-size><code>--bubbles-size</code></label> <input id=bubbles-size type=range min=1 max=500 value=80> </div> </div> <pre class=Code><code>.el {\n  --bubbles: <mark id=valuebubbles>75</mark>\n  --bubbles-size: 0;\n  --seed: 1;\n  transition: --bubbles-size .4s ease-out;\n}\n.el:nth-child(2) {\n  --seed: 2;\n}\n.text {\n  mask-image: paint(bubbles);\n}\n.el:hover {\n  --bubbles-size: <mark id=valuebubbles-size>80</mark>;\n  transition-timing-function: ease-in;\n}</code></pre> <pre class=Code><code class=language-js>// generate random seed :)\nel.addEventListener('transitionend', e => {\n  el.style.setProperty('--seed', Math.random())\n})</code></pre> <pre class=Code><code class=language-js>registerPaint('bubbles', class {\n  paint(ctx, geom, properties) {\n    const seed = properties.get('--seed').toString();\n    Math.seedrandom(seed);\n\n    // do random things now\n  }\n}</code></pre>"},MJNI:function(e,t){e.exports="<p>Demo from <a href=https://github.com/GoogleChromeLabs/houdini-samples>Google Chrome samples</a>. Content <strike>is</strike> was editable (Chrome 78+ is failing it).</p> <style> .Demo {\n  padding-top: 0;\n}\n#masonry {\n  display: layout(masonry);\n  --padding: 20;\n  --columns: 3;\n}\n#masonry > div {\n  background: #ff0;\n  color: #111;\n  font: 1em sans-serif;\n  padding: 20px;\n}\n#masonry > div:nth-child(odd) {\n  background: #08c4c4;\n}\n#masonry > div::first-letter {\n  font-size: 200%;\n} </style> <div class=Demo> <div class=Control> <label for=masonrycolumns><code>--columns</code></label> <input id=masonrycolumns type=range min=1 max=10 value=3> </div> <div class=Control> <label for=masonrypadding><code>--padding</code></label> <input id=masonrypadding type=range min=0 max=100 value=20> </div> <div id=masonry> <div>1 Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix. Vix stet honestatis definitionem an, et natum ocurreret cum, semper interpretaris cu mea. Eam saperet fierent luptatum no. Ius ei dicunt detracto elaboraret. Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix. Vix stet honestatis definitionem an, et natum ocurreret cum, semper interpretaris cu mea. Eam saperet fierent luptatum no. Ius ei dicunt detracto elaboraret.</div> <div>2 Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix. Vix stet honestatis definitionem an, et natum ocurreret cum, semper interpretaris cu mea. Eam saperet fierent luptatum no. Ius ei dicunt detracto elaboraret.</div> <div>3 Lorem ipsum dolor sit amet.</div> <div>4 Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix. Vix stet honestatis definitionem an, et natum ocurreret cum, semper interpretaris cu mea. Eam saperet fierent luptatum no. Ius ei dicunt detracto elaboraret.</div> <div>5 Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix. Vix stet honestatis definitionem an.</div> <div>6 Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix. Vix stet honestatis definitionem an, et natum ocurreret cum, semper interpretaris cu mea. Eam saperet fierent luptatum no. Ius ei dicunt detracto elaboraret Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix. Vix stet honestatis definitionem an, et natum ocurreret cum, semper interpretaris cu mea.</div> <div>7 Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix. Vix stet honestatis definitionem an, et natum ocurreret cum, semper interpretaris cu mea. Eam saperet fierent luptatum no. Ius ei dicunt detracto elaboraret.</div> <div>8 Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix.</div> <div>9 Lorem ipsum dolor sit amet, consul disputando ne his, et vim accumsan ponderum. Rebum deseruisse ex vix. Vix stet honestatis definitionem an, et natum ocurreret cum, semper interpretaris cu mea..</div> </div> </div> <pre class=Code><code>#masonry {\n  display: layout(masonry);\n  --padding: <mark id=valuepadding>20</mark>;\n  --columns: <mark id=valuecolumns>3</mark>;\n}</code></pre>"},MtuS:function(e,t){e.exports="<p>This demo produces different result on each repaints (resize browser, zoom, play with controls, etc.), as there is no way to store state inside the registered paint. More info in this <a href=https://github.com/tc39/proposal-seeded-random>TC39 proposal about Seeded Random numbers</a> from Tab Atkins.</p> <p>A solution could be used, see the <a href=/random-bubbles-mask>Random bubbles mask</a> demo</p> <p>Code adapted from <a href=https://roughjs.com/ >Rough.js</a></p> <style> .Demo {\n  display: flex;\n  flex-direction: column;\n  resize: both;\n  background: radial-gradient(at top center, hsl(40, 100%, 55%), hsl(13, 100%, 55%));\n}\n#el {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n}\n.el {\n  width: 152px;\n  height: 152px;\n  flex: 0 0 auto;\n  margin: 50px;\n  background: var(--rough-fill);\n  border: var(--rough-stroke-width) solid var(--rough-stroke);\n  --rough-fill: #0081ff;\n  --rough-stroke: black;\n  --rough-stroke-width: 2px;\n  --rough-roughness: 7;\n}\n.el:nth-child(2) {\n  --rough-fill: #8100ff;\n}\n@supports (border-image-source: paint(rough-boxes)) {\n  .is-loaded .el {\n    border-image-source: paint(rough-boxes);\n    border-image-slice: 0 fill;\n    border-image-outset: 10px;\n    background: none;\n  }\n}\n@media (max-width: 500px) {\n  .el:nth-child(2) {\n    display: none;\n  }\n} </style> <div class=Demo id=Demo> <div id=el> <div class=el></div> <div class=el></div> </div> <div class=Control> <label for=rough-stroke-width><code>--rough-stroke-width</code></label> <input id=rough-stroke-width type=range min=1 max=10 value=2> </div> <div class=Control> <label for=rough-roughness><code>--rough-roughness</code></label> <input id=rough-roughness type=range min=0 max=10 value=5 step=.2> </div> </div> <pre class=Code><code>.el {\n  background: var(--rough-fill);\n  border: var(--rough-stroke-width) solid var(--rough-stroke);\n  --rough-fill: #0081ff;\n  --rough-stroke: black;\n  --rough-stroke-width: <mark id=value-rough-stroke-width>4px</mark>;\n  --rough-roughness: <mark id=value-rough-roughness>7</mark>;\n}\n.el:nth-child(2) {\n  --rough-fill: #8100ff;\n}\n@supports (border-image-source: paint(rough-boxes)) {\n  .is-loaded .el {\n    border-image-source: paint(rough-boxes);\n    border-image-slice: 0 fill;\n    border-image-outset: 10px;\n    background: none;\n  }\n}</code></pre>"},NvPW:function(e,t){e.exports='<p>Let’s stop with classic rounded corners. Draw beveled, scooped or notched corners.</p> <style> .a {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 325px;\n  max-width: 80%;\n  height: 200px;\n  margin: 20px auto;\n  color: #fff;\n  font-size: 4em;\n  background: linear-gradient(hsl(20, 90%, 65%), hsl(359, 88%, 57%));\n  border-radius: 20px;\n}\n@supports (background: paint(corner-shape)) {\n  #el.is-loaded {\n    -webkit-mask-image: paint(corner-shape);\n    border-radius: 0;\n    --corner-radius: 20px;\n    --corner-shape: scoop;\n  }\n} </style> <div class=Demo> <div class=a id=el>CSS!</div> <div class=Control> <label for=cornerRadius><code>--corner-radius</code></label> <input type=range min=0 max=100 value=20 id=cornerRadius> </div> <div class=Control> <label for=cornerShape><code>--corner-shape</code></label> <select name="" id=cornerShape> <option>round</option> <option>bevel</option> <option selected=selected>scoop</option> <option>notch</option> <option value=iPhoneX>Special: iPhoneX</option> </select> </div> </div> <pre class=Code><code>.el {\n  border-radius: 20px;\n}\n@supports (background: paint(id)) {\n  .el.is-loaded {\n    border-radius: 0;\n    mask-image: paint(corner-shape);\n    --corner-radius: <mark id=valuecornerRadius>20px</mark>;\n    --corner-shape: <mark id=valuecornerShape>scoop</mark>;\n  }\n}</code></pre>'},O5Om:function(e,t){e.exports='<p>The new CSS Layout API (Houdini) let you define your own custom layout. Here’s a quick attempt at making an SVG path layout.</p> <p>As you can see, add <code>display: layout(svg-path)</code> and set custom properties:</p> <ul> <li><code>--path</code>, an SVG path as defined in CSS, eg <code>--path: path(\'...\')</code></li> <li><code>--viewbox</code>, an SVG viewbox, eg <code>--viewbox: 0 0 1000 400</code>. If no viewbox is defined (or set to <code>none</code>), viewbox will be computed from SVG path (best fitted). If a fixed <code>height</code> is set, viewbox will be scaled accordingly and no longer respect aspect-ratio</li> <li>Alignments <ul> <li><code>--justify-items</code> | <code>--align-items</code>: <code>anchor-start</code> | <code>center</code> | <code>anchor-end</code></li> <li><code>--justify-self</code> | <code>--align-self</code>: <code>anchor-start</code> | <code>center</code> | <code>anchor-end</code></li> <li>current CSS properties coul have been used (but new custom value couldn’t be created right now)</li> </ul> </li> </ul> <p>Also, two properties exist:</p> <ul> <li><code>--layout-mode: absolute (default) | contain</code>. <code>contain</code> sets elements’ position as they will not overflow (fixed width needed)</li> <li><code>--path-loop: no-loop (default) | loop</code> (automatically set to <code>loop</code> if path ends with letter ‘Z’). Helps if first and last element should not be at the same position</li> </ul> <style> .Demo {\n  padding: 0;\n  overflow: visible;\n  position: relative;\n}\n.Demo-title {\n  position: absolute;\n  z-index: 1;\n  top: 6rem;\n  left: 3rem;\n  color: #666;\n  font-weight: bold;\n  font-size: 2rem;\n  background: none;\n}\n.buttons {\n  font-size: .65em;\n  margin-top: 1em;\n}\n.el {\n  display: flex;\n  justify-content: space-around;\n  align-items: flex-end;\n  height: 400px;\n  background-image: url(\'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 400" preserveAspectRatio="none"><defs><linearGradient id="g"><stop offset="0%" stop-color="rgb(255,0,0)" stop-opacity="1" /><stop offset="100%" stop-color="rgb(255,255,0)" stop-opacity="1" /></linearGradient></defs><path d="M-26.8,395.1c50.6-64.7,170.1-163.6,274.1-175.3c104.7-11.8,177.6,44.7,323.5,42.4c100-1.6,187.1-31.8,343.5-272.9l100,0L1000,400L0,400" stroke="none" fill="url(%23g)" /><path d="M-26.8,395.1c50.6-64.7,170.1-163.6,274.1-175.3c104.7-11.8,177.6,44.7,323.5,42.4c100-1.6,187.1-31.8,343.5-272.9s184.7-25.9,184.7-25.9S895.4,362.2,541.4,345.7c-125.9-5.9-210.6-70.6-300-72.9s-252.9,140-252.9,140L-26.8,395.1z" stroke="none" fill="white" /></svg>\'), linear-gradient(to bottom right, white -100px, hsl(180, 100%, 70%));\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n}\n.el > div {\n  color: hsl(0, 80%, 95%);\n  font-weight: bold;\n  font-size: 1.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: 50px;\n  margin-bottom: 75px;\n}\n\n.el > div div {\n  border: solid 10px transparent;\n  border-image-source: paint(polygon);\n  border-image-outset: 10px;\n  border-image-width: 10px;\n  border-image-slice: 0 fill;\n  background: #000;\n  background-clip: padding-box;\n  border-radius: 3px;\n  padding: 1.5rem;\n  white-space: nowrap;\n}\n@media (max-width: 450px) {\n  .el > div {\n    font-size: 1em;\n  }\n  .el > div div {\n    padding: .75rem;\n  }\n}\n.el > div::after {\n  content: \'\';\n  position: absolute;\n  bottom: -5px;\n  left: 0;\n  right: 0;\n  width: 10px;\n  height: 10px;\n  margin: auto;\n  background: #000;\n  border-radius: 50%;\n}\n.el > div div strong {\n  display: block;\n  font-size: .75em;\n}\n#svg {\n  background: rgba(255,255,255,.1);\n  flex: 0 1 400px;\n}\n#svg-path {\n  d: path("M112,298.6c62.4-43.5,112.9-68.2,309.4-28.2c214.5,43.7,320,17.6,452.9-138.8");\n}\n@media (max-width: 450px) {\n  #svg-path {\n    d: path("M115.05810397553518,362.82018348623853C201.92293577981656,349.90122324159086,304.41070336391437,328.25932721712564,540.6660550458714,270.40000000000003C617.551376146789,271.2865443425077,637.4244648318041,239.07033639143725,865.1256880733944,104.07706422018339");\n  }\n}\n#points circle:hover,\n#controlPoints circle:hover {\n  fill: cyan;\n  stroke: white;\n  stroke-width: 5px;\n}\n\n@supports (display: layout(svg-path)) {\n  .is-loaded > div {\n    margin-bottom: 0;\n  }\n} </style> <div class=Demo id=Demo> <div class=Demo-title>Your next big idea. <div class=buttons> <button id=buttonAdd>Add</button> <button id=buttonRemove>Remove</button> fake items </div> </div> <div class=el id=el> <div class=item><div><strong>1.</strong>EXPLORE</div></div> <div class=item><div><strong>2.</strong>GROW</div></div> <div class=item><div><strong>3.</strong>INNOVATE</div></div> <div class=item><div><strong>4.</strong>ACCELERATE</div></div> <div class=item><div><strong>5.</strong>NO LIMITS</div></div> </div> <div class=Controls> <div class="Control Control--first"> <label for=justify-items><code>--justify-items</code></label> <select name="" id=justify-items> <option>anchor-start</option> <option selected=selected>center</option> <option>anchor-end</option> </select> </div> <div class=Control> <label for=align-items><code>--align-items</code></label> <select name="" id=align-items> <option>anchor-start</option> <option>center</option> <option selected=selected>anchor-end</option> </select> </div> <div class="Control Control-title"> <p>The 3rd element</p> </div> <div class=Control> <label for=justify-self><code>--justify-self</code></label> <select name="" id=justify-self> <option>anchor-start</option> <option selected=selected>center</option> <option>anchor-end</option> </select> </div> <div class=Control> <label for=align-self><code>--align-self</code></label> <select name="" id=align-self> <option>anchor-start</option> <option>center</option> <option selected=selected>anchor-end</option> </select> </div> <div class="Control Control-title"> <p>SVG Path</p> </div> <div class=Control> <label for=path><code>--path</code></label> <select name="" id=path> <option value=M112,298.6c62.4-43.5,112.9-68.2,309.4-28.2c214.5,43.7,320,17.6,452.9-138.8>Initial curve</option> <option value=M0,300C200,200,300,200,500,300C700,400,800,400,1000,300>Oscilloscope</option> <option value=M500,200a100,100,0,0,0,300,0a100,100,0,0,0,-300,0z>Circle</option> </select> </div> <div class="Control Control--row Control--row-3"> <svg viewBox="0 0 1000 400" id=svg> <path id=svg-path fill=none stroke=white stroke-width=5px></path> <g id=controlPolylines fill=deeppink stroke=deeppink stroke-width=2px></g> <g id=controlPoints fill=deeppink stroke=deeppink></g> <g id=points fill=white></g> </svg> </div> </div> </div> <pre class=Code><code class="liveCoding css" data-livecoding-id=Demo contenteditable>@supports (display: layout(id)) {\n  .el.is-loaded {\n    display: layout(svg-path);\n    --justify-items: <mark id=valuejustify-items>center</mark>;\n    --align-items: <mark id=valuealign-items>anchor-end</mark>;\n    --path: <mark id=valuepath>path("M112,298.6c62.4-43.5,112.9-68.2,309.4-28.2c214.5,43.7,320,17.6,452.9-138.8")</mark>;\n    --viewbox: 0 0 1000 400;\n  }\n  .is-loaded > div:nth-child(3) {\n    --justify-self: <mark id=valuejustify-self>center</mark>;\n    --align-self: <mark id=valuealign-self>anchor-end</mark>;\n  }\n}</code></pre> '},QcL6:function(e,t){e.exports=function(){var e=document.querySelector("#ripple"),t=performance.now(),n=void 0,i=void 0;document.querySelector("#ripple").addEventListener("click",function(o){e.classList.add("animating");var r=[o.offsetX,o.offsetY];n=r[0],i=r[1],t=performance.now(),requestAnimationFrame(function o(r){var a=Math.floor(r-t);if(e.style.cssText="--ripple-x: "+n+"; --ripple-y: "+i+"; --animation-tick: "+a+";",a>1e3)return e.classList.remove("animating"),void(e.style.cssText="--animation-tick: 0");requestAnimationFrame(o)})})}},QsTI:function(e,t,n){"use strict";for(var i=n("Dd8w"),o=n.n(i),r=n("NYxO"),a=Object(r.mapGetters)(["posts"]),s={},l=0;l<a.length;l++)s[a[l].url]=!1;t.a={head:function(){var e=/(<([^>]+)>)/gi,t=this.post,n=t.title.replace(e,""),i="";return t.desc&&(i=t.desc.replace(e,"")),{title:"CSS Houdini: "+n+" - @iamvdo",meta:[{hid:"description",name:"description",content:i}]}},mounted:function(){window.Prism.highlightAll(),window.LiveCoding(),s[this.id]||(s[this.id]=!0,this.post.properties&&CSS.registerProperty&&this.post.properties.forEach(function(e){CSS.registerProperty({name:e[0],syntax:e[1],inherits:e[2],initialValue:e[3]})}));try{n("Wnpj")("./"+this.id+"/index.js")()}catch(e){}},computed:o()({},Object(r.mapGetters)(["getAbbrTag"]),{id:function(){return this.$route.params.post},post:function(){return this.$store.getters.getPost(this.id)},prevPost:function(){return this.$store.getters.getPrevPost(this.id)},nextPost:function(){return this.$store.getters.getNextPost(this.id)},postContent:function(){return n("HQd9")("./"+this.id+"/index.html")},tags:function(){return this.post.tags},registerPaintURL:function(){return"/posts/"+this.id+"/paint.js"},registerLayoutURL:function(){return"/posts/"+this.id+"/layout.js"},isPaint:function(){return this.tags.filter(function(e){return"paint"===e}).length},isLayout:function(){return this.tags.filter(function(e){return"layout"===e}).length}}),methods:{getTag:function(e){return this.$store.getters.getTag(e)}}}},"R/Kb":function(e,t){e.exports=function(){function e(e,t){var n=[e.offsetX,e.offsetY],i=n[0],o=n[1];e.target.style.cssText="--size: "+t+"; --x: "+i+"; --y: "+o+";"}for(var t=document.querySelectorAll(".img"),n=0;n<t.length;n++)!function(n){t[n].classList.add("is-loaded"),t[n].addEventListener("mousemove",function(i){t[n].classList.add("on"),e(i,150)}),t[n].addEventListener("mouseenter",function(t){e(t,150)}),t[n].addEventListener("mouseleave",function(i){t[n].classList.remove("on"),e(i,0)})}(n)}},S2ZT:function(e,t){e.exports=function(){document.getElementById("el").classList.add("is-loaded"),["rough-stroke-width","rough-roughness"].forEach(function(e){document.getElementById(e).addEventListener("input",function(t){var n=t.target.value;"rough-stroke-width"===e&&(n+="px"),document.querySelectorAll(".el").forEach(function(t){t.style.setProperty("--"+e,n)}),document.getElementById("value-"+e).innerHTML=n})})}},VJR1:function(e,t){e.exports=function(){!function(){function e(e,t){return[].slice.call((t||document).querySelectorAll(e))}if(window.addEventListener){var t=window.StyleFix={link:function(e){try{if("stylesheet"!==e.rel||e.hasAttribute("data-noprefix"))return}catch(e){return}var n,i=e.href||e.getAttribute("data-href"),o=i.replace(/[^\/]+$/,""),r=e.parentNode,a=new XMLHttpRequest;a.onreadystatechange=function(){4===a.readyState&&n()},n=function(){var n=a.responseText;if(n&&e.parentNode&&(!a.status||a.status<400||a.status>600)){if(n=t.fix(n,!0,e),o){n=n.replace(/url\(\s*?((?:"|')?)(.+?)\1\s*?\)/gi,function(e,t,n){return/^([a-z]{3,10}:|\/|#)/i.test(n)?e:'url("'+o+n+'")'});var i=o.replace(/([\\\^\$*+[\]?{}.=!:(|)])/g,"\\$1");n=n.replace(RegExp("\\b(behavior:\\s*?url\\('?\"?)"+i,"gi"),"$1")}var s=document.createElement("style");s.textContent=n,s.media=e.media,s.disabled=e.disabled,s.setAttribute("data-href",e.getAttribute("href")),r.insertBefore(s,e),r.removeChild(e),s.media=e.media}};try{a.open("GET",i),a.send(null)}catch(e){"undefined"!=typeof XDomainRequest&&(a=new XDomainRequest,a.onerror=a.onprogress=function(){},a.onload=n,a.open("GET",i),a.send(null))}e.setAttribute("data-inprogress","")},styleElement:function(e){if(!e.hasAttribute("data-noprefix")){var n=e.disabled;e.textContent=t.fix(e.textContent,!0,e),e.disabled=n}},styleAttribute:function(e){var n=e.getAttribute("style");n=t.fix(n,!1,e),e.setAttribute("style",n)},process:function(){e('link[rel="stylesheet"]:not([data-inprogress])').forEach(StyleFix.link),e("style").forEach(StyleFix.styleElement),e("[style]").forEach(StyleFix.styleAttribute)},register:function(e,n){(t.fixers=t.fixers||[]).splice(void 0===n?t.fixers.length:n,0,e)},fix:function(e,n,i){for(var o=0;o<t.fixers.length;o++)e=t.fixers[o](e,n,i)||e;return e},camelCase:function(e){return e.replace(/-([a-z])/g,function(e,t){return t.toUpperCase()}).replace("-","")},deCamelCase:function(e){return e.replace(/[A-Z]/g,function(e){return"-"+e.toLowerCase()})}};!function(){setTimeout(function(){e('link[rel="stylesheet"]').forEach(StyleFix.link)},10),document.addEventListener("DOMContentLoaded",StyleFix.process,!1)}()}}(),function(e){function t(e,t,i,o,r){if(e=n[e],e.length){var a=RegExp(t+"("+e.join("|")+")"+i,"gi");r=r.replace(a,o)}return r}if(window.StyleFix&&window.getComputedStyle){var n=window.PrefixFree={prefixCSS:function(e,i,o){var r=n.prefix;if(n.functions.indexOf("linear-gradient")>-1&&(e=e.replace(/(\s|:|,)(repeating-)?linear-gradient\(\s*(-?\d*\.?\d*)deg/gi,function(e,t,n,i){return t+(n||"")+"linear-gradient("+(90-i)+"deg"})),e=t("functions","(\\s|:|,)","\\s*\\(","$1"+r+"$2(",e),e=t("keywords","(\\s|:)","(\\s|;|\\}|$)","$1"+r+"$2$3",e),e=t("properties","(^|\\{|\\s|;)","\\s*:","$1"+r+"$2:",e),n.properties.length){var a=RegExp("\\b("+n.properties.join("|")+")(?!:)","gi");e=t("valueProperties","\\b",":(.+?);",function(e){return e.replace(a,r+"$1")},e)}return i&&(e=t("selectors","","\\b",n.prefixSelector,e),e=t("atrules","@","\\b","@"+r+"$1",e)),e=e.replace(RegExp("-"+r,"g"),"-"),e=e.replace(/-\*-(?=[a-z]+)/gi,n.prefix)},property:function(e){return(n.properties.indexOf(e)?n.prefix:"")+e},value:function(e,i){return e=t("functions","(^|\\s|,)","\\s*\\(","$1"+n.prefix+"$2(",e),e=t("keywords","(^|\\s)","(\\s|$)","$1"+n.prefix+"$2$3",e)},prefixSelector:function(e){return e.replace(/^:{1,2}/,function(e){return e+n.prefix})},prefixProperty:function(e,t){var i=n.prefix+e;return t?StyleFix.camelCase(i):i}};!function(){var e={},t=[],i=getComputedStyle(document.documentElement,null),o=document.createElement("div").style,r=function(n){if("-"===n.charAt(0)){t.push(n);var i=n.split("-"),o=i[1];for(e[o]=++e[o]||1;i.length>3;){i.pop();var r=i.join("-");a(r)&&-1===t.indexOf(r)&&t.push(r)}}},a=function(e){return StyleFix.camelCase(e)in o};if(i.length>0)for(var s=0;s<i.length;s++)r(i[s]);else for(var l in i)r(StyleFix.deCamelCase(l));var d={uses:0};for(var c in e){var p=e[c];d.uses<p&&(d={prefix:c,uses:p})}n.prefix="-"+d.prefix+"-",n.Prefix=StyleFix.camelCase(n.prefix),n.properties=[];for(var s=0;s<t.length;s++){var l=t[s];if(0===l.indexOf(n.prefix)){var u=l.slice(n.prefix.length);a(u)||n.properties.push(u)}}"Ms"==n.Prefix&&!("transform"in o)&&!("MsTransform"in o)&&"msTransform"in o&&n.properties.push("transform","transform-origin"),n.properties.sort()}(),function(){function e(e,t){return o[t]="",o[t]=e,!!o[t]}var t={"linear-gradient":{property:"backgroundImage",params:"red, teal"},calc:{property:"width",params:"1px + 5%"},element:{property:"backgroundImage",params:"#foo"},"cross-fade":{property:"backgroundImage",params:"url(a.png), url(b.png), 50%"}};t["repeating-linear-gradient"]=t["repeating-radial-gradient"]=t["radial-gradient"]=t["linear-gradient"];var i={initial:"color","zoom-in":"cursor","zoom-out":"cursor",box:"display",flexbox:"display","inline-flexbox":"display",flex:"display","inline-flex":"display"};n.functions=[],n.keywords=[];var o=document.createElement("div").style;for(var r in t){var a=t[r],s=a.property,l=r+"("+a.params+")";!e(l,s)&&e(n.prefix+l,s)&&n.functions.push(r)}for(var d in i){var s=i[d];!e(d,s)&&e(n.prefix+d,s)&&n.keywords.push(d)}}(),function(){function t(e){return r.textContent=e+"{}",!!r.sheet.cssRules.length}var i={":read-only":null,":read-write":null,":any-link":null,"::selection":null},o={keyframes:"name",viewport:null,document:'regexp(".")'};n.selectors=[],n.atrules=[];var r=e.appendChild(document.createElement("style"));for(var a in i){var s=a+(i[a]?"("+i[a]+")":"");!t(s)&&t(n.prefixSelector(s))&&n.selectors.push(a)}for(var l in o){var s=l+" "+(o[l]||"");!t("@"+s)&&t("@"+n.prefix+s)&&n.atrules.push(l)}e.removeChild(r)}(),n.valueProperties=["transition","transition-property"],e.className+=" "+n.prefix,StyleFix.register(n.prefixCSS)}}(document.documentElement),function(){var e=Math.PI,t=2*e,n=e/180,i=document.createElement("div");document.head.appendChild(i);var o=self.ConicGradient=function(e){o.all.push(this),e=e||{},this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d"),this.repeating=!!e.repeating,this.size=e.size||Math.max(innerWidth,innerHeight),this.canvas.width=this.canvas.height=this.size;var t=e.stops;this.stops=(t||"").split(/\s*,(?![^(]*\))\s*/),this.from=0;for(var n=0;n<this.stops.length;n++)if(this.stops[n]){var i=this.stops[n]=new o.ColorStop(this,this.stops[n]);i.next&&(this.stops.splice(n+1,0,i.next),n++)}else this.stops.splice(n,1),n--;if(0==this.stops[0].color.indexOf("from")&&(this.from=360*this.stops[0].pos,this.stops.shift()),void 0===this.stops[0].pos)this.stops[0].pos=0;else if(this.stops[0].pos>0){var r=this.stops[0].clone();r.pos=0,this.stops.unshift(r)}if(void 0===this.stops[this.stops.length-1].pos)this.stops[this.stops.length-1].pos=1;else if(!this.repeating&&this.stops[this.stops.length-1].pos<1){var a=this.stops[this.stops.length-1].clone();a.pos=1,this.stops.push(a)}if(this.stops.forEach(function(e,t){if(void 0===e.pos){for(var n=t+1;this[n];n++)if(void 0!==this[n].pos){e.pos=this[t-1].pos+(this[n].pos-this[t-1].pos)/(n-t+1);break}}else t>0&&(e.pos=Math.max(e.pos,this[t-1].pos))},this.stops),this.repeating)for(var t=this.stops.slice(),s=t[t.length-1],l=s.pos-t[0].pos,n=0;this.stops[this.stops.length-1].pos<1&&n<1e4;n++)for(var d=0;d<t.length;d++){var c=t[d].clone();c.pos+=(n+1)*l,this.stops.push(c)}this.paint()};o.all=[],o.prototype={toString:function(){return"url('"+this.dataURL+"')"},get dataURL(){return"data:image/svg+xml,"+encodeURIComponent(this.svg)},get blobURL(){return URL.createObjectURL(new Blob([this.svg],{type:"image/svg+xml"}))},get svg(){return'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="none"><svg viewBox="0 0 100 100" preserveAspectRatio="xMidYMid slice"><image width="100" height="100%" xlink:href="'+this.png+'" /></svg></svg>'},get png(){return this.canvas.toDataURL()},get r(){return Math.sqrt(2)*this.size/2},paint:function(){var e,t,i,o=this.context,r=this.r,a=this.size/2,s=0,l=this.stops[s];o.translate(this.size/2,this.size/2),o.rotate(-90*n),o.rotate(this.from*n),o.translate(-this.size/2,-this.size/2);for(var d=0;d<360;){if(d/360+1e-5>=l.pos){do{e=l,s++,l=this.stops[s]}while(l&&l!=e&&l.pos===e.pos);if(!l)break;var c=e.color+""==l.color+""&&e!=l;t=e.color.map(function(e,t){return l.color[t]-e})}i=(d/360-e.pos)/(l.pos-e.pos);var p=c?l.color:t.map(function(t,n){var o=t*i+e.color[n];return n<3?255&o:o});if(o.fillStyle="rgba("+p.join(",")+")",o.beginPath(),o.moveTo(a,a),c)var u=360*(l.pos-e.pos);else var u=.5;var g=d*n;g=Math.min(360*n,g);var m=g+u*n;m=Math.min(360*n,m+.02),o.arc(a,a,r,g,m),o.closePath(),o.fill(),d+=u}}},o.ColorStop=function(e,n){if(this.gradient=e,n){var i=n.match(/^(.+?)(?:\s+([\d.]+)(%|deg|turn|grad|rad)?)?(?:\s+([\d.]+)(%|deg|turn|grad|rad)?)?\s*$/);if(this.color=o.ColorStop.colorToRGBA(i[1]),i[2]){var r=i[3];"%"==r||"0"===i[2]&&!r?this.pos=i[2]/100:"turn"==r?this.pos=+i[2]:"deg"==r?this.pos=i[2]/360:"grad"==r?this.pos=i[2]/400:"rad"==r&&(this.pos=i[2]/t)}i[4]&&(this.next=new o.ColorStop(e,i[1]+" "+i[4]+i[5]))}},o.ColorStop.prototype={clone:function(){var e=new o.ColorStop(this.gradient);return e.color=this.color,e.pos=this.pos,e},toString:function(){return"rgba("+this.color.join(", ")+") "+100*this.pos+"%"}},o.ColorStop.colorToRGBA=function(e){if(!Array.isArray(e)&&-1==e.indexOf("from")){i.style.color=e;var t=getComputedStyle(i).color.match(/rgba?\(([\d.]+), ([\d.]+), ([\d.]+)(?:, ([\d.]+))?\)/);return t&&(t.shift(),t=t.map(function(e){return+e}),t[3]=isNaN(t[3])?1:t[3]),t||[0,0,0,0]}return e}}(),self.StyleFix&&function(){var e=document.createElement("p");e.style.backgroundImage="conic-gradient(white, black)",e.style.backgroundImage=PrefixFree.prefix+"conic-gradient(white, black)",e.style.backgroundImage||StyleFix.register(function(e,t){return e.indexOf("conic-gradient")>-1&&(e=e.replace(/(?:repeating-)?conic-gradient\(\s*((?:\([^()]+\)|[^;()}])+?)\)/g,function(e,t){return new ConicGradient({stops:t,repeating:e.indexOf("repeating-")>-1})})),e})}(),el.classList.add("is-loaded");var e=new ConicGradient({stops:"red, magenta, blue, cyan, lime, yellow, red"});CSS.supports("background","paint(id, foo)")||(el.style.background="url("+e.dataURL+")")}},Wnpj:function(e,t,n){function i(e){return n(o(e))}function o(e){var t=r[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}var r={"./avatar-polygons/index.js":"Yifo","./background-properties/index.js":"o69F","./checkboxes/index.js":"zM8t","./conic-gradient/index.js":"VJR1","./corner-shape/index.js":"nD0N","./corners-gradient/index.js":"BWHf","./double-rainbow/index.js":"dBgO","./dynamic-hover-masks/index.js":"R/Kb","./eq-responsive-background/index.js":"qsHA","./highlighter-marker-annotations/index.js":"ePda","./irregular-grid/index.js":"L2ZZ","./masonry/index.js":"E3jA","./non-rectangular-separators/index.js":"CvAr","./random-bubbles-mask/index.js":"kyjG","./ripple/index.js":"QcL6","./rough-boxes/index.js":"S2ZT","./slanted-backgrounds/index.js":"KMsR","./smooth-corners/index.js":"pNCL","./svg-path-layout/index.js":"6FXL","./tooltip/index.js":"EKVQ"};i.keys=function(){return Object.keys(r)},i.resolve=o,e.exports=i,i.id="Wnpj"},Xx5n:function(e,t){e.exports="<p>Houdini makes slanted backgrounds so much easier. Even in multiple lines.</p> <p>The drawback here is that background colors are “correct” only on first paint, as there is no way to handle lines specifically and no way to store state. This demo is facing similar problems that the <a href=/rough-boxes>Rough boxes</a> one.</p> <style> .Demo {\n  padding-bottom: 25px;\n  font-size: 2em;\n}\n.el {\n  padding-right: 30px;\n  max-width: 600px;\n}\n.el span {\n  line-height: 1.83;\n  padding: .25em 10px;\n  -webkit-box-decoration-break: clone;\n    box-decoration-break: clone;\n  background: hsl(276, 100%, 50%);\n}\n\n@supports (background: paint(slanted-bg)) {\n  .el.is-loaded span {\n    padding-right: 30px;\n    background: paint(slanted-bg);\n  }\n} </style> <div class=Demo id=Demo> <p class=el id=el><span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Id tempore repudiandae iusto odio adipisci, quidem consectetur ullam, itaque alias qui?</span></p> </div> <pre class=Code><code>.el span {\n  box-decoration-break: clone;\n  background: hsl(276, 100%, 50%);\n}\n@supports (background: paint(slanted-bg)) {\n  .el.is-loaded span {\n    padding-right: 30px;\n    background: paint(slanted-bg);\n  }\n}</code></pre>"},Yifo:function(e,t){e.exports=function(){document.getElementById("el").classList.add("is-loaded"),["angle","sides"].forEach(function(e){document.getElementById("avatar"+e).addEventListener("input",function(t){var n=t.target.value;"angle"===e&&(n+="deg"),document.getElementById("el").style.setProperty("--avatar-"+e,n),document.getElementById("value"+e).innerHTML=n})})}},Yntl:function(e,t,n){var i=n("dv+a");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);n("rjj0")("16ab5c12",i,!0)},ad1h:function(e,t,n){e.exports=n.p+"img/3.dcc4b76.jpg"},boKi:function(e,t,n){"use strict";function i(e){n("Yntl")}Object.defineProperty(t,"__esModule",{value:!0});var o=n("QsTI"),r=n("0/6Y"),a=n("VU/8"),s=i,l=a(o.a,r.a,s,null,null);t.default=l.exports},dBgO:function(e,t){e.exports=function(){var e=document.querySelector(".el"),t=document.querySelector(".text"),n=document.querySelector(".shadow"),i=performance.now();e.addEventListener("click",function(o){t.innerHTML=n.innerHTML="",e.style.setProperty("--x",o.offsetX),i=performance.now(),requestAnimationFrame(function o(r){var a=Math.floor(r-i);if(e.style.setProperty("--thick",Math.round(a/800*45)),e.style.setProperty("--rad",Math.round(a/800*200)),a>800)return void(t.innerHTML=n.innerHTML="Double Rainbow");requestAnimationFrame(o)})})}},"dv+a":function(e,t,n){t=e.exports=n("FZ+f")(!1),t.push([e.i,'.Post-header{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.Post-header,.Post-prevNext{display:-webkit-box;display:-ms-flexbox;display:flex}.Post-prevNext{list-style-type:none;padding:0;margin:0;font-size:.75em}.Post-prevNextText+.Post-prevNextText{margin-left:.5rem}.Post-prevNextInactive{opacity:.5}@media (max-width:575px){.Post-header{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.Post-prevNext{-webkit-box-ordinal-group:0;-ms-flex-order:-1;order:-1;-ms-flex-item-align:end;align-self:flex-end}}.Post-desc{line-height:2.6rem;font-size:1.3em;color:#737f8c}.Post-tags{padding:0}.Post-tag{display:inline-block;font-size:.75em;margin:0 1rem 0 0}.Post-tag .Tag{margin:0;vertical-align:1px}.Post-content{font-size:1.7rem;line-height:2.8rem}.Demo{background:-webkit-gradient(linear,left top,right bottom,from(#333),to(#111));background:linear-gradient(to bottom right,#333,#111);color:#eee;padding:25px 0 0;margin:25px auto 0;overflow:hidden}.Controls{display:grid;grid-template-columns:repeat(auto-fill,minmax(400px,1fr));background:rgba(0,0,0,.25)}@media (max-width:450px){.Controls{grid-template-columns:100%}}@media (min-width:1240px){.Controls{grid-template-columns:repeat(auto-fill,minmax(50%,1fr))}}.Control{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background:rgba(0,0,0,.25)}@media (max-width:450px){.Control{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;padding:0 1rem}}.Controls .Control{background:none;padding:.5rem 0}.Control--row{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.Control--row-3{grid-row:span 3}.Control--first,.Demo>:first-child+.Control{padding-top:1rem}.Control:last-child{padding-bottom:1rem}.Control label{width:250px;text-align:left}.Control input,.Control select{width:150px}@media (max-width:450px){.Control input,.Control select{-webkit-box-flex:1;-ms-flex:1;flex:1;width:auto}}.Control p{width:400px;text-align:left}.Control *{vertical-align:middle}.Control-title{font-weight:700}.Control-title+.Control{grid-column:1}.Code{display:block;font-family:Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace;position:relative;background:#3d464f;color:#fff;padding:1em;margin:0 auto 25px;white-space:pre-wrap;text-align:left;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none}.Code+.Code{margin-top:-24px}.Code code{outline:none;word-break:break-all}.Code code.language-js:after,.Code code[contenteditable]:after{content:"LIVE EDIT";position:absolute;font-family:Didact Gothic;top:0;right:0;background:#ff1493;color:#eee;padding:0 .25rem;font-size:.7em;text-shadow:none}.Code code.language-js:after{content:"JS"}.Code mark{background:#ff0;color:#3d464f;padding:0 .25rem}.Note{font-size:.8em;margin:25px 0}.Warning{color:crimson}.embed .Post-content .Code,.embed .Post-content .Control{font-size:1.4em;font-weight:700}.embed .Demo{margin-top:5px}.embed .Post-content>p:first-of-type,.embed .Post-content>p:first-of-type~p,.embed .Post-content>ul:first-of-type,.embed .Post-content>ul:first-of-type~p,.embed .Post-content>ul:first-of-type~ul{display:none}.embed .Control{-ms-flex-pack:distribute;justify-content:space-around}.embed .Control input,.embed .Control label,.embed .Control select{width:30%}',""])},ePda:function(e,t){e.exports=function(){function e(){document.querySelectorAll(".el").forEach(function(e,t){e.classList.add("no-transition"),requestAnimationFrame(function(){e.style.setProperty("--highlighter-progress",0),setTimeout(function(){e.classList.remove("no-transition"),e.style.setProperty("--highlighter-progress",1)},700*t+100)})})}var t=document.getElementById("Demo"),n=document.getElementById("button");t.classList.add("is-loaded"),e(),n.addEventListener("click",e),["size","opacity","smooth","pen","easing","duration"].forEach(function(e){document.getElementById("highlighter-"+e).addEventListener("input",function(t){var n=t.target.value;"duration"===e&&(n+="ms");var i=n;"pen"===e&&(i="url(/posts/highlighter-marker-annotations/"+n+")"),document.querySelectorAll(".el").forEach(function(t,n){"easing"===e?t.style.setProperty("transition-timing-function",i):"duration"===e?t.style.setProperty("transition-duration",i):t.style.setProperty("--highlighter-"+e,i)}),document.getElementById("valuehighlighter-"+e).innerHTML=n})})}},ekN9:function(e,t){e.exports="<p>Draw a circle (at mouse position), and update radius over time. <strong>CSS Houdini Paint API at its best</strong></p> <p>Code mostly from <a href=https://github.com/GoogleChromeLabs/houdini-samples>https://github.com/GoogleChromeLabs/houdini-samples</a></p> <style> #ripple {\n  display: block;\n  font-size: 3em;\n  --gradient: linear-gradient(to bottom right, deeppink, orangered);\n  background: var(--gradient);\n  border: 0;\n  margin: 50px auto;\n  padding: 1rem 2rem;\n  box-shadow: 0 1px 1.5px 0 rgba(0,0,0,.12),0 1px 1px 0 rgba(0,0,0,.24);\n  color: white;\n  border-radius: 5px;\n\n  --ripple-x: 0;\n  --ripple-y: 0;\n  --ripple-color: rgba(255,255,255,0.5);\n  --animation-tick: 0;\n}\n#ripple:focus {\n  outline: none;\n}\n#ripple.animating {\n  background: paint(ripple), var(--gradient);\n} </style> <div class=Demo> <button id=ripple> Click me! </button> </div> <pre class=Code><code>.ripple {\n  --gradient: linear-gradient(to bottom right, deeppink, orangered);\n  background: var(--gradient);\n}\n.ripple.animating {\n  background: paint(ripple), var(--gradient);\n}</code></pre>"},ev5t:function(e,t,n){e.exports=n.p+"img/1.050b062.jpg"},hGys:function(e,t){e.exports="<style> .Demo {\n  padding-bottom: 25px;\n  font-size: 2em;\n}\n.el {\n  overflow: hidden;\n  text-align: center;\n  width: 250px;\n  padding: 2em 0;\n  margin: 50px auto;\n  border-radius: 3px;\n  overflow: hidden;\n  resize: horizontal;\n  --breakpoint: 350px;\n  background: hsl(190, 56%, 42%);\n}\n.el--big {\n  width: 400px;\n}\n.is-loaded .el {\n  background: paint(bg, hsl(190, 56%, 42%), hsl(360, 56%, 42%));\n} </style> <div class=Demo id=Demo> <div class=el>Resize me!</div> <div class=\"el el--big\">Resize me!</div> </div> <pre class=Code><code>.el {\n  --breakpoint: 350px;\n  background: blue;\n}\n.is-loaded .el {\n  background: paint(bg, blue, red);\n}</code></pre> <pre class=Code><code class=language-js>// registerPaint worklet\nregisterPaint('bg', class {\n  static get inputProperties() {\n    return [\n      '--breakpoint'\n    ]\n  }\n  static get inputArguments() {\n    return [\n      '&lt;color>',\n      '&lt;color>'\n    ];\n  }\n  paint (ctx, geom, properties, args) {\n    const breakpoint = properties.get('--breakpoint').value;\n    let color = geom.width &lt; breakpoint ? args[0] : args[1];\n    color = color.toString();\n\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, geom.width, geom.height);\n  }\n})</code></pre> "},hPFl:function(e,t){e.exports="<p>No more faking with pseudo-elements and CSS transforms. And it’s responsive out of the box.</p> <style> .Demo {\n  background: radial-gradient(at center, hsl(180, 100%, 50%), hsl(180, 70%, 30%));\n}\n.A {\n  width: 250px;\n  height: 350px;\n  margin: 50px auto;\n  background: linear-gradient(#fff 50%, #eee);\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0 2px 3px rgba(0,0,0,.5), 0 5px 15px rgba(0,0,0,.4);\n  resize:  both;\n}\n.B, .C {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n  text-align: center;\n  font-size: 2em;\n}\n.B {\n  height: 200px;\n  padding-bottom: 30px;\n  background-color: hsl(0, 100%, 62%);\n  background-image: linear-gradient(hsl(296, 61%, 26%), hsl(0, 100%, 62%));\n  background-repeat: no-repeat;\n  border-bottom: 1px solid transparent;\n  border-image-source: radial-gradient(closest-corner at 50% -400px, hsl(0, 100%, 62%) 100%, transparent);\n  border-image-slice: 0 0 100% 0;\n  border-image-width: var(--separator-size);\n  border-image-outset: var(--separator-size);\n  --separator-shape: curve-left;\n  --separator-size: 75px;\n  --separator-shadow: .35;\n  --separator-shadow-color: rgba(0,0,0,.35);\n}\n.B.is-loaded {\n  border-image-source: paint(separator)\n}\n.C {\n  height: 150px;\n  color: #222;\n  padding-bottom: 50px;\n  font-size: 1.2em;\n}\n.D {\n  width: 80px;\n  height: 80px;\n  background: rgba(0,0,0,.35);\n  border-radius: 50%;\n  margin-bottom: 20px;\n} </style> <div class=Demo> <div class=A> <div class=B id=el> <div class=D></div> We do things. </div> <div class=C> Very wow. </div> </div> <div class=Control> <label for=separator-size><code>--separator-size</code></label> <input id=separator-size type=range min=0 max=100 step=1 value=75> </div> <div class=Control> <label for=separator-shadow><code>--separator-shadow</code></label> <input id=separator-shadow type=range min=0 max=1 step=0.05 value=0.35> </div> <div class=Control> <label for=separator-shadow-color><code>--separator-shadow-color</code></label> <input id=separator-shadow-color type=range min=0 max=1 step=0.01 value=0.35> </div> <div class=Control> <label for=separator-shape><code>--separator-shape</code></label> <select id=separator-shape> <option>diagonal-left</option> <option>diagonal-right</option> <option selected=selected>curve-left</option> <option>curve-right</option> </select> </div> </div> <pre class=Code><code>.el {\n  border-image-source: radial-gradient(...);\n  border-image-slice: 0 0 100% 0;\n  border-image-width: var(--separator-size);\n  border-image-outset: var(--separator-size);\n  --separator-size: <mark id=valueseparator-size>75px</mark>;\n  --separator-shadow: <mark id=valueseparator-shadow>0.35</mark>;\n  --separator-shadow-color: <mark id=valueseparator-shadow-color>rgba(0,0,0,0.35)</mark>;\n  --separator-shape: <mark id=valueseparator-shape>curve-left</mark>;\n}\n.el.is-loaded {\n  border-image-source: paint(separator)\n}\n</code></pre>"},kZAv:function(e,t){e.exports="<p>Most demos using the Paint worklet from Houdini are using shapes, as in <a href=/slanted-backgrounds>slanted backgrounds</a>, <a href=/tooltip>simple tooltip</a>, <a href=/corner-shape>corner shapes</a> and so on.</p> <p><strong>This SVG-in-CSS worklet is a generic paint worklet that draw an SVG path, authored right from the CSS.</strong></p> <p>It needs some custom properties:</p> <ul> <li><code>--svg-path: path()</code> containing an SVG path</li> <li><code>--svg-viewbox</code> to define the SVG <code>viewBox</code> (default <code>0 0 100 100</code>)</li> <li><code>--svg-fill</code> the fill color (default black)</li> <li><code>--svg-stroke</code> the stroke color (default transparent)</li> <li><code>--svg-stroke-width</code> the stroke width</li> </ul> <p>I don’t add <code>--svg-preserve-aspect-ratio</code> because it complexifies the worklet, and above all, behaviour is already different between CSS and SVG. So, it’s better to play with background properties to deal with background size, position, repetition, etc.</p> <p><b>Code samples below are live editable!</b></p> <style> .Demo {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  background: #111;\n  padding: 50px 0;\n}\n.el {\n  text-align: center;\n  text-shadow: 0 2px 2px rgba(0, 0, 0, .2);\n  font-size: 2em;\n  padding: 50px;\n  width: 200px;\n  background: paint(svg-in-css);\n}\n.el--1 {\n  --svg-path: path('M 10 63 H 50');\n  --svg-fill: transparent;\n  --svg-stroke: gold;\n  --svg-stroke-width: 10;\n}\n.el--2 {\n  --svg-viewbox: 0 0 10 12;\n  --svg-path: path('M 3,3 L 8,5 L 2,9');\n  --svg-fill: deeppink;\n}\n.el--3 {\n  --svg-path: path('m70.94524,13.02567c13.16825,0.06846 23.82763,11.45054 23.89174,25.51214c0,25.76204 -43.91839,51.27419 -43.91839,51.27419s-43.91861,-25.88724 -43.91861,-51.27419c0,-14.08984 10.69659,-25.51214 23.89174,-25.51214l0,0c8.07719,-0.06726 15.62849,4.27085 20.02687,11.50536c4.42842,-7.19932 11.96022,-11.52618 20.02665,-11.50536z');\n  --svg-fill: limegreen;\n  background-size: 80px 80px;\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n}\n.el--4 {\n  --svg-path: path('M71 19a12 12 0 0110 10l5 34a12 12 0 01-6 12l-31 16A12 12 0 0135 90L10 65a12 12 0 01-2-14l16-31a12 12 0 0112-6');\n  --svg-fill: #00d0f5;\n  background-size: 100px 100px;\n  background-position: 15% 40%;\n  background-repeat: no-repeat;\n}\n.el--5 {\n  --svg-path: path('M40 0L0 100h20L60 0zm30 0L30 100h20L90 0z');\n  --svg-fill: #ff6100;\n  background-size: 60px 60px;\n  background-position: 40PX;\n  background-repeat: no-repeat;\n}\n.el--6 {\n  display: grid;\n}\n.el--6 * {\n  grid-area: 1 / 1;\n  z-index: 1;\n  margin: -50px;\n}\n.el--6 .bg {\n  background: linear-gradient(#ff3030, #490080);\n  -webkit-mask: paint(svg-in-css);\n  -webkit-mask-size: 120px 120px;\n  -webkit-mask-repeat: no-repeat;\n  -webkit-mask-position: 80%;\n  mask: paint(svg-in-css);\n  mask-size: 120px 120px;\n  mask-repeat: no-repeat;\n  mask-position: 80%;\n  --svg-path: path('m27,12c17,-5 27,-4 30,7c4,11 -8,26 -1,35c7,9 16,-11 32,-7c16,3 7,28 -9,38c-16,10 -25,10 -26,-11c-1,-21 -36,-5 -45,-21c-9,-16 2,-35 19,-41z');\n}\n.el--6 .txt {\n  align-self: center;\n  justify-self: center;\n}\n\n.el--8 {\n  /* set custom properties */\n  --y-low: 75;\n  --y-high: 25;\n  /* define SVG path based on these values */\n  --svg-path: path(`M 0 var(--y-low) C 25 var(--y-low) 25 var(--y-high) 50 var(--y-high) S 75 var(--y-low) 100 var(--y-low)`);\n  /* set stroke */\n  --svg-stroke: #00ff8f;\n  --svg-stroke-width: 10;\n  /* set background */\n  background-repeat: repeat-x;\n  background-position: 0 80%;\n  background-size: 50px 30px;\n  /* use animation */\n  animation: waves 2s alternate infinite ease-in-out;\n}\n\n@keyframes waves {\n  to {\n    --y-low: 25;\n    --y-high: 75;\n  }\n} </style> <h2>Basic shapes</h2> <p>Viewbox will adapt to element’s size, with default to <code>0 0 100 100</code>.</p> <div class=Demo id=Demo> <div class=\"el el--1\">SVG-in-CSS</div> <div class=\"el el--2\">SVG-in-CSS</div> </div> <pre class=Code><code class=\"liveCoding css\" contenteditable data-livecoding-id=Demo>.el {\n  background-image: paint(svg-in-css);\n}\n.el--1 {\n  --svg-path: path('M 10,63 H 50');\n  --svg-stroke: gold;\n  --svg-stroke-width: 10;\n}\n.el--2 {\n  --svg-viewbox: 0 0 10 12;\n  --svg-path: path('M 3,3 L 8,5 L 2,9');\n  --svg-fill: deeppink;\n}</code></pre> <p>Play with <code>background-*</code> properties to control how shape is rendered (fixed ratio for example).</p> <div class=Demo id=Demo> <div class=\"el el--3\">SVG-in-CSS</div> <div class=\"el el--4\">SVG-in-CSS</div> <div class=\"el el--5\">SVG-in-CSS</div> </div> <pre class=Code><code class=\"liveCoding css\" contenteditable data-livecoding-id=Demo>.el--3 {\n  --svg-path: path('m 71,13 c 13,0 24,11 24,26 c 0,26 -44,51 -44,51 s -44,-26 -44,-51 c 0,-14 11,-26 24,-26 l 0,0 c 8,0 16,4 20,12 c 4,-7 12,-12 20,-12 z');\n  --svg-fill: limegreen;\n  background-size: 80px 80px;\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n}\n.el--4 {\n  --svg-path: path('M 71,19 a 12,12,0,0,1,10,10 l 5,34 a 12,12,0,0,1,-6,12 l -31,16 A 12,12,0,0,1,35,90 L 10,65 a 12,12,0,0,1,-2,-14 l 16,-31 a 12,12,0,0,1,12,-6');\n  --svg-fill: deepskyblue;\n  background-size: 100px 100px;\n  background-position: 15% 40%;\n  background-repeat: no-repeat;\n}\n.el--5 {\n  --svg-path: path('M 40,0 L 0,100 h 20 L 60,0 z m 30,0 L 30,100 h 20 L 90,0 z');\n  --svg-fill: orangered;\n  background-size: 60px 60px;\n  background-position: 40PX;\n  background-repeat: no-repeat;\n}</code></pre> <h2>Using as CSS masks</h2> <p>As the SVG path is drawn on a canvas inside the worklet, you can’t really use CSS gradients from your CSS. Or we need to convert CSS gradients to canvas gradients.</p> <p>Instead, <strong> set the <code>paint()</code> to a CSS mask on an element with a gradient!</strong> (because we don’t have <code>background-mask</code> neither)</p> <div class=Demo id=Demo2> <div class=\"el el--6\"> <span class=bg></span> <span class=txt>SVG-in-CSS</span> </div> </div> <pre class=Code><code class=\"liveCoding css\" contenteditable data-livecoding-id=Demo2>.bg {\n  /* apply a gradient to a background element */\n  background: linear-gradient(#ff3030, #490080);\n\n  /* create path */\n  --svg-path: path('m27,12c17,-5 27,-4 30,7c4,11 -8,26 -1,35c7,9 16,-11 32,-7c16,3 7,28 -9,38c-16,10 -25,10 -26,-11c-1,-21 -36,-5 -45,-21c-9,-16 2,-35 19,-41z');\n  /* and use as mask (sorry, Chrome still need prefixes :( ) */\n  -webkit-mask: paint(svg-in-css);\n         mask: paint(svg-in-css);\n  -webkit-mask-size: 120px 120px;\n         mask-size: 120px 120px;\n  -webkit-mask-repeat: no-repeat;\n         mask-repeat: no-repeat;\n  -webkit-mask-position: 80%;\n         mask-position: 80%;\n}</code></pre> <h2>With animations</h2> <p>As I said before, <a href=https://drafts.css-houdini.org/css-properties-values-api/#supported-names>there is no defined SVG path data type in Properties & Values spec</a>. Thus, you can’t <a href=/animating-gradient>register new properties</a> with <code>@property</code> to make them animatable.</p> <p>As a workaround, you can register simple custom properties (aka numbers), then combine them inside <code>path()</code> function! It uses the <a href=/js-in-css>backtick trick explained in the JS-in-CSS demo</a>. <strong>Not very convenient, but you can use raw CSS transitions and animations on these properties.</strong></p> <p><strong>And this is fun!</strong></p> <p>Hover the first sample to see transition on path (click on it if on mobile) and see code below. The second one is using a CSS animation.</p> <div class=Demo id=Demo3> <div class=\"el el--7\" id=animate>SVG-in-CSS</div> <div class=\"el el--8\">SVG-in-CSS</div> </div> <pre class=Code><code class=css>/* custom property for x position */\n@property --pos {\n  syntax: '&lt;number>';\n  inherits: false;\n  initial-value: 0;\n}</code></pre> <pre class=Code><code class=\"liveCoding css\" contenteditable data-livecoding-id=Demo3>.el--7{\n  /* set initial position */\n  --pos: 30;\n  /* use inside path */\n  --svg-path: path(`M 10,63 H var(--pos)`);\n  --svg-stroke: gold;\n  --svg-stroke-width: 10;\n  /* animate it on hover! */\n  transition: --pos 1s;\n}\n.el--7:hover {\n  --pos: 60;\n}</code></pre> <h2>Some notes</h2> <p><code>--svg-path</code> and <code>--svg-viewbox</code> can’t be registered as valid properties. For the first one, <a href=https://drafts.css-houdini.org/css-properties-values-api/#supported-names>there is no SVG path data type</a>, and for the second, it seems that <code>&lt;number>+</code> is not supported in any browsers (unless <a href=https://ishoudinireadyyet.com/ >https://ishoudinireadyyet.com</a> is saying the opposite).</p> <p>The main limitation of this approach is that only one path can be drawn, no full SVG. <strong>Imagine how cool it would be if we could use the full power of SVG that way!</strong> 🤩</p> <p>A workaround could be to allow multiple paths, using arguments from the <code>paint()</code> function (to set color, size, etc.) instead of custom properties. <strong>That would have enabled us to draw multiple path using different values on one unique element</strong>. The point is, support is not great (again, ishoudinireadyyet.com is misleading). See the <a href=/inner-borders>inner borders demo</a> for an example (check your browser and your flags)</p> "},kyjG:function(e,t){e.exports=function(){var e=document.querySelector(".Demo"),t=document.getElementById("seed"),n=document.querySelectorAll(".el");n.forEach(function(e){e.addEventListener("mouseenter",function(t){e.classList.add("hover")}),e.addEventListener("mouseleave",function(t){e.classList.remove("hover")}),e.addEventListener("transitionend",function(t){"--bubbles-size"===t.propertyName&&"0"===getComputedStyle(e).getPropertyValue("--bubbles-size")&&e.style.setProperty("--seed",String(Math.random()))})}),t.addEventListener("change",function(e){var t=e.target.checked?1:0;n.forEach(function(e){return e.style.setProperty("--seed-check",t)})}),["bubbles","bubbles-size"].forEach(function(t){document.getElementById(t).addEventListener("input",function(i){var o=i.target.value;n.forEach(function(n){"bubbles-size"===t?e.style.setProperty("--"+t,o):n.style.setProperty("--"+t,o)}),document.getElementById("value"+t).innerHTML=o})})}},"m+Sq":function(e,t){e.exports="<p>As the <a href=/corner-shape>corner shapes demo</a>, let’s end with rounded avatars. Build your own regular polygon, right from CSS.</p> <style> #el {\n  width: 152px;\n  height: 152px;\n  background: url(https://iamvdo.me/images/apple-touch-152.png);\n  background-size: cover;\n  --avatar-sides: 12;\n  --avatar-angle: 0deg;\n  margin: 50px auto;\n  border-radius: 50%;\n}\n@supports (background: paint(avatar-polygon)) {\n  #el.is-loaded {\n    border-radius: 0;\n    -webkit-mask-image: paint(avatar-polygon);\n  }\n} </style> <div class=Demo> <div id=el></div> <div class=Control> <label for=avatarsides><code>--avatar-sides</code></label> <input id=avatarsides type=range min=4 max=20 value=12> </div> <div class=Control> <label for=avatarangle><code>--avatar-angle</code></label> <input id=avatarangle type=range min=0 max=360 value=0 step=10> </div> </div> <pre class=Code><code>.el {\n  background: url(...);\n  border-radius: 50%;\n}\n@supports (background: paint(id)) {\n  .el.is-loaded {\n    border-radius: 0;\n    mask-image: paint(avatar-polygon);\n    --avatar-sides: <mark id=valuesides>12</mark>;\n    --avatar-angle: <mark id=valueangle>0deg</mark>;\n  }\n}</code></pre>"},nD0N:function(e,t){e.exports=function(){document.getElementById("el").classList.add("is-loaded"),document.getElementById("cornerShape").addEventListener("change",function(e){var t=e.target.value;document.getElementById("el").style.setProperty("--corner-shape",t),"iPhoneX"===t&&(document.getElementById("cornerRadius").value=25,document.getElementById("el").style.setProperty("--corner-radius","25px"),document.getElementById("valuecornerRadius").innerHTML="25px"),document.getElementById("valuecornerShape").innerHTML=t}),document.getElementById("cornerRadius").addEventListener("input",function(e){var t=e.target.value+"px";document.getElementById("el").style.setProperty("--corner-radius",t),document.getElementById("valuecornerRadius").innerHTML=t})}},nTdF:function(e,t){e.exports="<p>The <code>registerPaint()</code> draw a conical gradient using the Lea Verou’s polyfill from the worklet. We are using colors from the arguments’ <code>paint()</code> function</p> <p>For progressive enhancement, we also use speced <code>conic-gradient()</code> from CSS, and use Lea Verou’s polyfill from the client.</p> <style> .el {\n  width: 256px;\n  height: 256px;\n  background: white;\n  background: conic-gradient(red, magenta, blue, cyan, lime, yellow, red);\n  border-radius: 10px;\n  margin: 50px auto;\n}\n@supports (background: paint(id, foo)) {\n  .el.is-loaded {\n    background: paint(conic-gradient, red magenta blue cyan lime yellow red);\n  }\n} </style> <div class=Demo id=Demo> <div id=el class=el></div> </div> <pre class=Code><code class=\"liveCoding css\" data-livecoding-id=Demo contenteditable>.el {\n  background: conic-gradient(red, magenta, blue, cyan, lime, yellow, red);\n}\n@supports (background: paint(id, foo)) {\n  .el.is-loaded {\n    background: paint(conic-gradient, red magenta blue cyan lime yellow red);\n  }\n}</code></pre> <pre class=Code><code class=language-js>// Lea Verou polyfill\nvar gradient = new ConicGradient({\n  stops: \"red, magenta, blue, cyan, lime, yellow, red\"\n});\n\nif (!CSS.supports('background', 'paint(id, foo)')) {\n  el.style.background = 'url(' + gradient.dataURL + ')'\n}</code></pre> "},o69F:function(e,t){e.exports=function(){document.getElementById("el").classList.remove("is-loaded"),setTimeout(function(){document.getElementById("el").classList.add("is-loaded")},100),["opacity","rotate"].forEach(function(e){document.getElementById("background"+e).addEventListener("input",function(t){var n=t.target.value;"rotate"===e&&(n+="deg"),document.getElementById("el").style.setProperty("--background-"+e,n),document.getElementById("value"+e).innerHTML=n})}),["blur","grayscale","hue-rotate"].forEach(function(e){document.getElementById("background"+e).addEventListener("input",function(t){var n=t.target.value;"blur"===e&&(n+="px"),"grayscale"===e&&(n+="%"),"hue-rotate"===e&&(n+="deg"),document.getElementById("el").style.setProperty("--"+e,n),document.getElementById("value"+e).innerHTML=n})})}},"ol7+":function(e,t){e.exports="<p>Registering a new property can make it animatable (if <code>syntax</code> type is animatable). It is defined in <a href=https://drafts.css-houdini.org/css-properties-values-api/ >CSS Properties & Values API</a></p> <p>Available in JS with <code>CSS.registerProperty()</code> and in CSS with <code>@property</code></p> <style> #el {\n  --color-stop: deeppink;\n  width: 152px;\n  height: 152px;\n  margin: 50px auto;\n  border-radius: 10px;\n  background: linear-gradient(white, var(--color-stop));\n  transition: --color-stop 1s;\n}\n#el:hover {\n  --color-stop: deepskyblue;\n} </style> <div class=Demo> <div id=el></div> </div> <pre class=Code><code>#el {\n  --color-stop: deeppink;\n  background: linear-gradient(white, var(--color-stop))\n  transition: --color-stop 1s;\n}\n#el:hover {\n  --color-stop: deepskyblue;\n}</code></pre> <pre class=Code><code class=language-css>/* in CSS */\n@property --color-stop {\n  syntax: '&lt;color>';\n  inherits: false;\n  initial-value: transparent;\n}</code></pre> <pre class=Code><code class=language-js>/* or, in JS */\nCSS.registerProperty({\n  name: '--color-stop',\n  syntax: '&lt;color>',\n  inherits: false,\n  initialValue: 'transparent'\n})</code></pre>"},pNCL:function(e,t){e.exports=function(){var e=document.getElementById("exponent"),t=document.getElementById("borderRadius"),n=document.getElementById("el"),i=document.getElementById("shallow"),o=document.getElementById("shallowEl"),r=document.getElementById("shallowOver");n.classList.add("is-loaded"),e.addEventListener("input",function(e){var t=e.target.value;n.style.setProperty("--smooth-corners",t)}),i.addEventListener("click",function(e){o.style.opacity=i.checked?1:0}),r.addEventListener("change",function(e){o.style.zIndex=r.checked?1:"auto"}),e.addEventListener("input",function(e){var t=e.target.value;n.style.setProperty("--smooth-corners",t),document.getElementById("valuesquircle").innerHTML=t}),t.addEventListener("input",function(e){var t=e.target.value+"px";o.style.setProperty("border-radius",t),document.getElementById("valueborderRadius").innerHTML=t})}},qsHA:function(e,t){e.exports=function(){document.getElementById("Demo").classList.add("is-loaded")}},qunT:function(e,t){e.exports='<p>Also, react to mouse events and set CSS custom properties accordingly to update the registered paint. See JS below.</p> <style> .Demo {\n  background: radial-gradient(at center, hsl(180, 100%, 50%), hsl(180, 70%, 30%));\n  display: grid;\n  grid-template-columns: auto minmax(auto, 600px) auto;\n}\n.Demo-wrapper {\n  grid-column: 2 / -2;\n  display:  grid;\n  grid-template: auto / 1fr 1fr;\n  padding: 25px 0\n}\n.img {\n  box-sizing: border-box;\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-start;\n  font: 2em Montserrat, monospace;\n  color: hsl(210, 32%, 24%);\n  text-shadow: 0 2px 4px rgba(0,0,0,.2);\n  text-decoration: none;\n  width: 100%;\n  height: 200px;\n  padding-right: .2em;\n  --x: 150;\n  --y: 100;\n  --size: 0;\n  background-color: antiquewhite;\n  background-image: url(/posts/dynamic-hover-masks/1.jpg);\n   background-blend-mode: luminosity;\n  background-position: center;\n  transition: --size .25s, --x .5s, --y .5s;\n}\n.img.on {\n  transition: --size .2s, --x .05s, --y .05s;\n}\n.img::after {\n  content: attr(data-title);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  font-size: .7em;\n  position: absolute;\n  top: 0; left: 0; right: 0; bottom: 0;\n  background-image: inherit;\n  background-color: hsla(300, 100%, 50%, .75);\n  background-position: inherit;\n  background-blend-mode: multiply;\n  mix-blend-mode: hard-light;\n  opacity: 0;\n  transition: opacity .25s;\n}\n.img span {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n  background: hsl(210, 32%, 24%);\n  color: #fff;\n  mix-blend-mode: hard-light;\n}\n.img.on::after {\n  opacity: 1;\n}\n.img.is-loaded::after {\n  -webkit-mask-image: paint(circle);\n  mask-image: paint(circle);\n}\n\n.img:nth-child(2) {\n  background-image: url(/posts/dynamic-hover-masks/2.jpg);\n}\n.img:nth-child(3) {\n  background-image: url(/posts/dynamic-hover-masks/3.jpg);\n}\n.img:nth-child(4) {\n  background-image: url(/posts/dynamic-hover-masks/4.jpg);\n}\n.img:nth-child(5) {\n  background-image: url(/posts/dynamic-hover-masks/5.jpg);\n}\n.img:nth-child(6) {\n  background-image: url(/posts/dynamic-hover-masks/6.jpg);\n} </style> <div class=Demo> <div class=Demo-wrapper> <div href=# class=img data-title="Giant rock"><span>1</span></div> <div href=# class=img data-title="Peaceful boat"><span>2</span></div> <div href=# class=img data-title="Distant fog"><span>3</span></div> <div href=# class=img data-title="Noisy street"><span>4</span></div> <div href=# class=img data-title="Deep forest"><span>5</span></div> <div href=# class=img data-title="Turbulent sea"><span>6</span></div> </div> </div> <pre class=Code><code>.el {\n  background-image: url(...);\n}\n.el::after {\n  background-color: hsla(300, 100%, 50%, .75);\n  mix-blend-mode: multiply;\n}\n.el.is-loaded::after {\n  mask-image: paint(circle);\n}</code></pre> <pre class=Code><code class=language-js>el.addEventListener(\'mousemove\', evt => {\n  el.style.cssText = `--size: 150; --x: ${evt.offsetX}; --y: ${evt.offsetY}`\n})\nel.addEventListener(\'mouseenter\', evt => {\n  el.style.cssText = `--size: 150; --x: ${evt.offsetX}; --y: ${evt.offsetY}`\n})\nel.addEventListener(\'mouseleave\', evt => {\n  el.style.cssText = `--size: 0; --x: ${evt.offsetX}; --y: ${evt.offsetY}`\n})</code></pre>'},r46r:function(e,t){e.exports='<p>You can play with all CSS (custom) properties available for the demo</p> <ul> <li><code>--highlighter-pen</code>, the type of pen (Highlighter marker, Gel pen or pencil)</li> <li><code>--highlighter-size</code>, <code>--highlighter-opacity</code></li> <li><code>--highlighter-smooth</code>, for repetitions of pen images (slow when using too high values)</li> <li><code>transition-timing-function</code>, <code>transition-duration</code> for animation controls</li> </ul> <p>Also, live-edit code directly</p> <ul> <li><code>--highlighter-color</code></li> <li><code>--highlighter-path</code>, SVG path(s) of the pen’s shape (awesome!)</li> </ul> <style> @import "https://fonts.googleapis.com/css?family=Caveat";\n\n.Demo {\n  background: #eee;\n  text-align: center;\n}\n.Control {\n  background: rgba(0,0,0,.65);\n}\nbutton {\n  display: block;\n  margin: 20px;\n  margin-left: auto;\n}\n.el {\n  position: relative;\n  display: inline-block;\n  font: 3em Caveat, sans-serif;\n  text-align: center;\n  text-transform: uppercase;\n  padding: 50px;\n\n  background: paint(highlighter);\n  border-image-source: var(--highlighter-pen);\n  --highlighter-pen: url(\'/posts/highlighter-marker-annotations/highlighter.png\');\n  --highlighter-color: cyan;\n  --highlighter-opacity: 1;\n  --highlighter-path: path("m46.83,230.9c24.41,-51.06 455.28,-6.72 465.09,-16.82");\n  --highlighter-size: 35;\n  --highlighter-smooth: 1;\n  --highlighter-progress: 0;\n  transition: --highlighter-progress 500ms cubic-bezier(0.55, 0.055, 0.675, 0.19);\n}\n.el span {\n  color: black;\n}\n.el2 {\n  --highlighter-color: lime;\n  --highlighter-opacity: 1;\n  --highlighter-path: path("M0,46L50,50"), path("M0,52L50,44");\n}\n.el3 {\n  --highlighter-color: deeppink;\n  --highlighter-path: path("M202,-62C188.217,-64.702,148.528,-73.550,119.300,-78.211C90.071,-82.873,59.023,-88.031,26.628,-89.969C-5.767,-91.908,-46.984,-90.904,-75.070,-89.840C-103.156,-88.777,-116.423,-87.753,-141.889,-83.590C-167.356,-79.428,-205.198,-71.744,-227.868,-64.864C-250.538,-57.984,-264.974,-51.285,-277.907,-42.311C-290.839,-33.337,-302.215,-22.697,-305.461,-11.021C-308.707,0.654,-306.092,14.116,-297.385,27.742C-288.678,41.368,-271.468,58.288,-253.218,70.734C-234.969,83.179,-213.221,93.155,-187.886,102.414C-162.551,111.672,-133.151,119.456,-101.209,126.285C-69.268,133.114,-29.440,139.841,3.762,143.387C36.965,146.934,68.146,148.981,98.004,147.566C127.863,146.151,160.802,141.849,182.911,134.898C205.021,127.947,219.750,116.644,230.660,105.860C241.570,95.076,248.007,83.292,248.373,70.195C248.738,57.099,242.991,41.648,232.854,27.281C222.716,12.914,210.334,-1.959,187.546,-16.008C164.758,-30.058,127.627,-45.437,96.123,-57.016C64.619,-68.595,34.039,-79.363,-1.478,-85.481C-36.996,-91.600,-80.660,-94.398,-116.983,-93.728C-153.307,-93.059,-203.584,-86.586,-219.420,-81.465C-235.256,-76.343,-213.237,-66.077,-212,-63");\n}\n.no-transition {\n  transition: none !important;\n} </style> <div class=Demo id=Demo> <div class=el><span>CSS</span></div> <div class="el el2"><span>Sooooo</span></div> <div class="el el3"><span>HUGE!?</span></div> <button id=button>Replay animation</button> <div class="Control Control--first"> <label for=highlighter-pen><code>--highlighter-pen</code></label> <select name="" id=highlighter-pen> <option value=highlighter.png>Highlighter marker</option> <option value=pencil.png>Pencil</option> <option value=gelpen.png>Gel pen</option> </select> </div> <div class=Control> <label for=highlighter-size><code>--highlighter-size</code></label> <input id=highlighter-size type=range min=1 max=60 step=1 value=35> </div> <div class=Control> <label for=highlighter-opacity><code>--highlighter-opacity</code></label> <input id=highlighter-opacity type=range min=0 max=1 step=0.05 value=1> </div> <div class=Control> <label for=highlighter-smooth><code>--highlighter-smooth</code></label> <input id=highlighter-smooth type=range min=0 max=10 step=.1 value=1> </div> <div class=Control> <label for=highlighter-easing><code>transition-timing-function</code></label> <select name="" id=highlighter-easing> <option>linear</option> <option value="cubic-bezier(0.55, 0.085, 0.68, 0.53)">ease-in-quad</option> <option value="cubic-bezier(0.55, 0.055, 0.675, 0.19)" selected=selected>ease-in-cubic</option> <option value="cubic-bezier(0.895, 0.03, 0.685, 0.22)">ease-in-quart</option> <option value="cubic-bezier(0.755, 0.05, 0.855, 0.06)">ease-in-quint</option> </select> </div> <div class=Control> <label for=highlighter-duration><code>transition-duration</code></label> <input id=highlighter-duration type=range min=0 max=5000 step=50 value=500> </div> </div> <pre class=Code><code class="liveCoding css" data-livecoding-id=Demo contenteditable>.el {\n  --highlighter-pen: url(\'/posts/highlighter-marker-annotations/<mark id=valuehighlighter-pen>highlighter.png</mark>\');\n  --highlighter-color: cyan;\n  --highlighter-path: path("M46.83,230.9c24.41,-51.06 455.28,-6.72 465.09,-16.82");\n  --highlighter-size: <mark id=valuehighlighter-size>35</mark>;\n  --highlighter-opacity: <mark id=valuehighlighter-opacity>1</mark>;\n  --highlighter-smooth: <mark id=valuehighlighter-smooth>1</mark>;\n  --highlighter-progress: 0;\n  transition: --highlighter-progress <mark id=valuehighlighter-duration>500ms</mark> <mark id=valuehighlighter-easing>cubic-bezier(0.55, 0.055, 0.675, 0.19)</mark>;\n  background: paint(highlighter);\n}\n.el2 {\n  --highlighter-color: lime;\n  --highlighter-path: path("M0,46L50,50"), path("M0,52L50,44");\n}\n.el3 {\n  --highlighter-color: deeppink;\n  --highlighter-path: path("M202,-62C188.217,-64.702,148.528,-73.550,119.3,-78.211C90.071,-82.873,59.023,-88.031,26.628,-89.969C-5.767,-91.908,-46.984,-90.904,-75.070,-89.840C-103.156,-88.777,-116.423,-87.753,-141.889,-83.590C-167.356,-79.428,-205.198,-71.744,-227.868,-64.864C-250.538,-57.984,-264.974,-51.285,-277.907,-42.311C-290.839,-33.337,-302.215,-22.697,-305.461,-11.021C-308.707,0.654,-306.092,14.116,-297.385,27.742C-288.678,41.368,-271.468,58.288,-253.218,70.734C-234.969,83.179,-213.221,93.155,-187.886,102.414C-162.551,111.672,-133.151,119.456,-101.209,126.285C-69.268,133.114,-29.440,139.841,3.762,143.387C36.965,146.934,68.146,148.981,98.004,147.566C127.863,146.151,160.802,141.849,182.911,134.898C205.021,127.947,219.750,116.644,230.660,105.860C241.570,95.076,248.007,83.292,248.373,70.195C248.738,57.099,242.991,41.648,232.854,27.281C222.716,12.914,210.334,-1.959,187.546,-16.008C164.758,-30.058,127.627,-45.437,96.123,-57.016C64.619,-68.595,34.039,-79.363,-1.478,-85.481C-36.996,-91.6,-80.660,-94.398,-116.983,-93.728C-153.307,-93.059,-203.584,-86.586,-219.420,-81.465C-235.256,-76.343,-213.237,-66.077,-212,-63");\n}</code></pre> '},"rr8+":function(e,t){e.exports="<style> .Demo {\n  padding-top: 0;\n}\n.el {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font: bold 3em \"Comic sans MS\", cursive;\n  width: 100%;\n  height: 300px;\n  background: linear-gradient(#00BFFF, #87CEEB, #87CEFA, #FFF);\n  background: linear-gradient(rgba(255,255,255,0) 80%, rgba(255,255,255,.75) 95%, #fff), paint(double-rainbow), linear-gradient(#00BFFF, #87CEEB, #87CEFA, #FFF);\n  --thick: 0;\n  --rad: 1;\n}\n.bar {\n  position: relative;\n  z-index: 1;\n  pointer-events: none\n}\n.text,\n.shadow {\n\n}\n.text {\n  background: linear-gradient(pink, deeppink);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n.shadow {\n  position: absolute; top: 0; left: 0; right: 0;\n  z-index: -1;\n  color: #ff0;\n  text-shadow: 0 2px 0 deeppink, 0 5px 5px rgba(0,0,0,.5);\n  transform: translateY(2px)\n} </style> <div class=Demo> <div class=el> <span class=bar> <span class=text>Click!</span> <span class=shadow>Click!</span> </span> </div> </div> <pre class=Code><code>.el {\n  background: paint(double-rainbow);\n  --thick: 0;\n  --rad: 1;\n}</code></pre> <pre class=Code><code class=language-js>el.addEventListener('click', evt => {\n  let start = performance.now()\n  requestAnimationFrame(function raf (now) {\n    let count = Math.floor(now - start)\n    el.style.setProperty('--thick', (count / duration * 45))\n    el.style.setProperty('--rad', (count / duration * 200))\n    if (count > duration) {\n      return\n    }\n    requestAnimationFrame(raf)\n  })\n})</code></pre>"},vA52:function(e,t){e.exports='<p>Don’t get me wrong with the title: <strong>Houdini is JS-in-CSS</strong> (allow JS scripts to be called from CSS). Here, it is more like JS-inside-CSS. You can write the <code>registerPaint</code>’s <code>paint</code> function, directly from CSS. You have access to:</p> <ul> <li><code>ctx</code>, the 2D rendering context</li> <li><code>geom</code>, the geometry of the element</li> </ul> <p>You can even write your own CSS custom properties, and use them from the JS code (thanks to <a href=https://twitter.com/yuanchuan23>@yuanchuan23</a> that come up with a solution using template strings: <strong>the backtick trick!</strong>)</p> <style> .Demo {\n  background: #1108a0;\n  padding: 50px 0;\n}\n.el {\n  font: bold 6em sans-serif;\n  color: yellow;\n  text-shadow: 0 3px 1px cyan;\n  line-height: 1.5em;\n  width: max-content;\n  padding-left: 30px;\n  padding-right: 50px;\n  isolation: isolate;\n  background: paint(background-canvas);\n\n  --color: cyan;\n  --multiplier: 0.24;\n  --pad: 30;\n  --slant: 20;\n\n  --background-canvas: (ctx, geom) => {\n    let multiplier = var(--multiplier);\n    let c = `var(--color)`;\n    let pad = var(--pad);\n    let slant = var(--slant);\n\n    ctx.moveTo(0, 0);\n    ctx.lineTo(pad + (geom.width - slant - pad) * multiplier, 0);\n    ctx.lineTo(pad + (geom.width - slant - pad) * multiplier + slant, geom.height);\n    ctx.lineTo(0, geom.height);\n    ctx.fillStyle = c;\n    ctx.fill();\n  };\n  transition: --multiplier .4s, --color .4s;\n}\n@media (max-width: 900px) {\n  .el {\n    font-size: 4em;\n  }\n}\n@media (max-width: 500px) {\n  .el {\n    font-size: 2.4em;\n  }\n}\n.el:hover {\n  --multiplier: 1;\n}\n.el span {\n  mix-blend-mode: exclusion;\n} </style> <div class=Demo id=Demo> <div class=el><span>JS-in-CSS.</span></div> </div> <pre class=Code><code class="liveCoding css" contenteditable data-livecoding-id=Demo>.el {\n  --color: cyan;\n  --multiplier: 0.24;\n  --pad: 30;\n  --slant: 20;\n  <span class="token property">--background-canvas</span>: (ctx, geom) => {\n    let multiplier = var(--multiplier);\n    let c = `var(--color)`;\n    let pad = var(--pad);\n    let slant = var(--slant);\n\n    ctx.moveTo(0, 0);\n    ctx.lineTo(pad + (geom.width - slant - pad) * multiplier, 0);\n    ctx.lineTo(pad + (geom.width - slant - pad) * multiplier + slant, geom.height);\n    ctx.lineTo(0, geom.height);\n    ctx.fillStyle = c;\n    ctx.fill();\n  };\n  background: paint(background-canvas);\n  transition: --multiplier .4s;\n}\n.el:hover {\n  --multiplier: 1;\n}</code></pre>'},vdef:function(e,t,n){e.exports=n.p+"img/2.a6e93dc.jpg"},wwpY:function(e,t){e.exports='<p>I wrote a <a href=http://iamvdo.me/en/blog/smooth-corners-with-css-houdini>blog post explaining the whole process</a> for this one.</p> <p><strong>Note:</strong> Squircle: N=4, iOS icons: N=5</p> <style> .a {\n  position: relative;\n  width: 256px;\n  height: 256px;\n  max-height: 80vw;\n  max-width: 80%;\n}\n.a {\n  margin: 50px auto;\n}\n.b {\n  width: 100%;\n  padding-top: 100%;\n  height: 0;\n  background: #fff;\n  border-radius: 70px;\n  position: absolute;\n  top: 0;\n}\n.c {\n  background: linear-gradient(to bottom right, deeppink, orangered);\n}\n@supports (-webkit-mask-image: paint(smooth-corners)) {\n  .c.is-loaded {\n    border-radius: 0;\n    -webkit-mask-image: paint(smooth-corners);\n    --smooth-corners: 4;\n  }\n} </style> <div class=Demo> <div class=a> <div class=b id=shallowEl></div> <div class="b c" id=el></div> </div> <div class=Control> <label for=exponent><code>--smooth-corners</code></label> <input type=range id=exponent min=0 max=10 step=0.1 value=4> </div> <div class=Control> <label for=shallow>Rounded rectangle comparison</label> <input type=checkbox id=shallow checked=checked> </div> <div class=Control> <label for=shallowOver>Rounded rectangle over</label> <input type=checkbox id=shallowOver> </div> <div class=Control> <label for=borderRadius><code>border-radius</code></label> <input type=range id=borderRadius min=0 max=100 step=1 value=70> </div> </div> <pre class=Code><code>.el {\n  background: ...;\n  border-radius: <mark id=valueborderRadius>70px</mark>;\n}\n@supports (mask-image: paint(smooth-corners)) {\n  .el.is-loaded {\n    border-radius: 0;\n    mask-image: paint(smooth-corners);\n    --smooth-corners: <mark id=valuesquircle>4</mark>;\n  }\n}</code></pre>'},zM8t:function(e,t){e.exports=function(){document.getElementById("Demo").classList.add("is-loaded")}},"zx/N":function(e,t){e.exports="<p><code>background-transform</code> should have been a better idea but it seems that no browsers support <code>&lt;transform-list></code> value right now (when <a href=/animating-gradient>registering a new custom properties</a>). So it's easier to play with <code>background-rotate</code></p> <style> .Demo {\n  color: #eee;\n}\n.el {\n  box-sizing: content-box;\n  font-size: 4.1em;\n  line-height: 1;\n  text-transform: uppercase;\n  width: 190px;\n  height: 200px;\n  padding-left: 10px;\n  border: 3px solid;\n  background-color: #333;\n  margin: 50px auto;\n\n  /* source */\n  /* should be something like */\n  --background-source: var(--source);\n  /* but for now, <image> type don't download image, so */\n  --source: url(/posts/background-properties/lowpoly.jpg);\n  list-style-image: var(--source);\n\n  background-image: var(--source);\n  background-size: 100% 100%;\n\n  /* opacity */\n  --background-opacity: 1;\n\n  /* transform */\n  --background-rotate: 0deg;\n\n  /* filter */\n  --background-filter: hue-rotate(var(--hue-rotate)) grayscale(var(--grayscale)) blur(var(--blur));\n  --blur: 0px;\n  --grayscale: 0%;\n  --hue-rotate: 320deg;\n}\n.el.is-loaded {\n  background-image: paint(background);\n} </style> <div class=Demo> <div id=el class=el> CSS is awesome </div> <div class=Control> <label for=backgroundopacity><code>--background-opacity</code></label> <input id=backgroundopacity type=range min=0 max=1 step=0.05 value=1> </div> <div class=Control> <label for=backgroundrotate><code>--background-rotate</code></label> <input id=backgroundrotate type=range min=0 max=360 value=0> </div> <div class=Control> <p><code>--background-filter</code></p> </div> <div class=Control> <label for=backgroundblur><code>--blur</code></label> <input id=backgroundblur type=range min=0 max=6 step=0.1 value=0> </div> <div class=Control> <label for=backgroundgrayscale><code>--grayscale</code></label> <input id=backgroundgrayscale type=range min=0 max=100 step=1 value=0> </div> <div class=Control> <label for=backgroundhue-rotate><code>--hue-rotate</code></label> <input id=backgroundhue-rotate type=range min=0 max=360 step=1 value=320> </div> </div> <pre class=Code><code>.el {\n  background: url(...);\n}\n.el.is-loaded {\n  background: paint(background);\n  --background-opacity: <mark id=valueopacity>1</mark>;\n  --background-rotate: <mark id=valuerotate>0deg</mark>;\n  --background-filter: hue-rotate(var(--hue-rotate)) grayscale(var(--grayscale)) blur(var(--blur));\n  --blur: <mark id=valueblur>0px</mark>;\n  --grayscale: <mark id=valuegrayscale>0%</mark>;\n  --hue-rotate: <mark id=valuehue-rotate>320deg</mark>;\n}</code></pre>"}});
//# sourceMappingURL=_post.83f5a0bfd76616a4f5a5.js.map